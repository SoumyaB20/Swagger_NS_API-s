{
  "openapi": "3.0.0",
  "info": {
    "title": "Project Allocation API",
    "version": "1.0.0"
  },

  "servers": [
    {
      "url": "https://restlets.api.netsuite.com"
    }
  ],
  "paths": {
    "/REST FLASH ACTUALS(1791)": {
      "post": {
        "tags": [
          "SFDC"
        ],
        "summary": "Provides Transaction details",
        "description": "API provides the response with Draft flash numbers and transactions that are posted on requested duration or period o SFDC \nThe Sample URL looks like -https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1791&deploy=1\n",
        "requestBody": {
          "description": "Project Allocation data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1791"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1791_Response"
                }
              }
            }
          }
        }
      }
    },
    "/rest_m_menu_dashboard_otg(1232)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "To Fetch User Details uisng EmailID",
        "description": "Used by OTG to get dashboard count of TS,\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1232&deploy=1\n",
        "requestBody": {
          "description": "Project Allocation data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1232"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1232_Response"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Get SOW by ID",
        "description": "This GET request is processed for creating a SOW which returns the SOW ID and Opportunity ID.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2506&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Id",
            "in": "query",
            "description": "ID of the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Name of the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Opportunity_Start_Date__c",
            "in": "query",
            "description": "Start date of the opportunity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "AccountId",
            "in": "query",
            "description": "ID of the account related to the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Amount",
            "in": "query",
            "description": "Amount of the opportunity",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Project_Location__c",
            "in": "query",
            "description": "Project location of the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Work_Location__c",
            "in": "query",
            "description": "Work location of the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SOW_Status__c",
            "in": "query",
            "description": "SOW status of the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Delivery_Model__c",
            "in": "query",
            "description": "Delivery model of the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Billing_Type__c",
            "in": "query",
            "description": "Billing type of the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "SOW_Start_Date__c",
            "in": "query",
            "description": "Start date of SOW for the opportunity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "SOW_End_Date__c",
            "in": "query",
            "description": "End date of SOW for the opportunity",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "SOW_Currency__c",
            "in": "query",
            "description": "Currency of SOW for the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Item__c",
            "in": "query",
            "description": "Item for the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Is_PO_Required__c",
            "in": "query",
            "description": "Flag indicating if PO is required",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "SOW_Amount__c",
            "in": "query",
            "description": "Amount of SOW for the opportunity",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Account_Subsidiary__c",
            "in": "query",
            "description": "Subsidiary of the account for the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Opportunity_ID__c",
            "in": "query",
            "description": "Opportunity ID for the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Account_Name",
            "in": "query",
            "description": "Name of the account for the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Account_ID__c",
            "in": "query",
            "description": "ID of the account for the opportunity",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProjectAllocationResponse201_1"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Opportunity not found"
          }
        }
      }
    },
    "/RESTlet_Termination(1643)": {
      "get": {
        "tags": [
          "Fusion"
        ],
        "summary": "Get SOW by ID",
        "description": "API to create Fusion- Employee JSON Master cuctom record \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1643&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Date",
            "in": "query",
            "description": "Date(DD)",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "description": "Month(MM)",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "description": "Year(YYYY)",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1643_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_Emp_Future_Termination(1891)": {
      "get": {
        "tags": [
          "Fusion"
        ],
        "summary": "Get SOW by ID",
        "description": "Setting Future Term Date on employee record from Fusion\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1891&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PersonId",
            "in": "query",
            "description": "ID of the person/employee",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "PersonNumber",
            "in": "query",
            "description": "Employee number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "AssignmentId",
            "in": "query",
            "description": "ID of the employee's assignment",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "AssignmentNumber",
            "in": "query",
            "description": "Assignment number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ActionCode",
            "in": "query",
            "description": "Action code related to termination",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "WorkerType",
            "in": "query",
            "description": "Type of the worker (e.g., \"E\" for Employee)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "BusinessUnitName",
            "in": "query",
            "description": "Name of the business unit",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "NotificationDate",
            "in": "query",
            "description": "Date of notification",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "AssignmentStatusType",
            "in": "query",
            "description": "Status type of the assignment (e.g., \"INACTIVE\")",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TerminationDate",
            "in": "query",
            "description": "Date of termination",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "LastWorkingDate",
            "in": "query",
            "description": "Date of the last working day (can be null)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "TerminationReason",
            "in": "query",
            "description": "Reason for termination",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "TerminationAction",
            "in": "query",
            "description": "Type of termination action (e.g., \"Voluntary Separation\")",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1891_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_New_ExpeM_Expense_On_Save_OTG_V2.0(2008)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Get SOW by ID",
        "description": "API to create Fusion- Employee JSON Master cuctom record \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1891&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "EmailId",
            "in": "query",
            "description": "Email ID of the requester",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestType",
            "in": "query",
            "description": "Type of the request",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ExpID",
            "in": "query",
            "description": "ID of the expense",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Project",
            "in": "query",
            "description": "Project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Purpose",
            "in": "query",
            "description": "Purpose of the expense",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "expenseDate",
            "in": "query",
            "description": "Date of the expense",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "Amount",
            "in": "query",
            "description": "Amount of the expense",
            "required": true,
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "Category",
            "in": "query",
            "description": "Category of the expense",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "IsBillable",
            "in": "query",
            "description": "Flag indicating if the expense is billable",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Currency",
            "in": "query",
            "description": "Currency of the expense",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Date",
            "in": "query",
            "description": "Date of the expense",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ImgData",
            "in": "query",
            "description": "Image data of the expense",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Memo",
            "in": "query",
            "description": "Memo for the expense",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RefId",
            "in": "query",
            "description": "Reference ID of the expense",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RefNo",
            "in": "query",
            "description": "Reference number of the expense",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ImgdataPDF",
            "in": "query",
            "description": "Flag indicating if the image data is in PDF format",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2008_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_M_AllocationDetails_OTG_V2.0(2020)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Get SOW by ID",
        "description": "Used by OTG to get resource allocations \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2020&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email ID",
            "in": "query",
            "description": "Email (abc@brillio.com)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Additional Data",
            "required": true,
            "schema": {
              "type": "array",
              "items": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2020_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_M_Expense_Project_Details_V2.0(2007)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Get SOW by ID",
        "description": "Used by OTG to Fetch the expense Supporting funtions, such as Projects, currency\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2007&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email ID",
            "in": "query",
            "description": "Email (abc@brillio.com)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Additional data for the request",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Date": {
                  "type": "string",
                  "format": "date",
                  "description": "Specific date for user details"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2007_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_M_NotSubmiited_TS V2.0(2016)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "jdc",
        "description": "Used by OTG to get Timesheet Submitted and NOt submitted \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2016&deploy=1\n",
        "parameters": [
          {
            "name": "Email ID",
            "in": "query",
            "description": "Email (abc@brillio.com)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Additional data for the request",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Week Start Date": {
                  "type": "string",
                  "format": "date",
                  "description": "Specific date for user details"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2016_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_M_RealTime_Allocation_Data V2.0(2018)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "jdc",
        "description": "Used by OTG to create, submit timesheets\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2018&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email ID",
            "in": "query",
            "description": "Email (abc@brillio.com)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Additional data for the request",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "Week Start Date": {
                  "type": "string",
                  "format": "date",
                  "description": "Specific date for user details"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2018_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_M_Travel_Approval_OTG V2.0(2013)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "jdc",
        "description": "Used by OTG to get travel approval list and to approve or reject them \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2013&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email ID",
            "in": "query",
            "description": "Email (abc@brillio.com)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Additional data for the request",
            "required": true,
            "schema": {
              "type": "array",
              "items": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2013_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/Rest_OTG_birthday_newJoinee(2021)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "jdc",
        "description": "Used by OTG to get birthday of peers\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2021&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email ID",
            "in": "query",
            "description": "Email (abc@brillio.com)",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2021_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_OTG_TS_Approve_Reject(2083)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Quick Time Approval Pool",
        "description": "Used by OTG to Approve the Timesheets\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2083&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Email ID",
            "in": "query",
            "description": "Email (abc@brillio.com)",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "Additional data for the request",
            "required": true,
            "schema": {
              "type": "array",
              "items": {}
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2083_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/FUEL |REST_Edit_Allocation(2444)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Create Project Allocation",
        "description": "This script is used to create Edit Allocation Record.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2444deploy=1\n",
        "requestBody": {
          "description": "Project Allocation data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2444"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2444_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_edit_Allocation_withdraw(2445)": {
      "put": {
        "tags": [
          "FUEL"
        ],
        "summary": "Edit Allocation Request",
        "description": "this script is used to cancelled edit allocation request from fuel\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2445&deploy=1\n",
        "requestBody": {
          "description": "Project Allocation data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2445"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2445_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Extension_Withdraw(2446)": {
      "put": {
        "tags": [
          "FUEL"
        ],
        "summary": "Cancel Extension Request",
        "description": "Script is used to cancelled Extension Request from fuel\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2446&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2446"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2446_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Allocation_Withdraw(2447)": {
      "put": {
        "tags": [
          "FUEL"
        ],
        "summary": "Intitate Allocation Request",
        "description": "Script is used to cancelled initiate allocation request from fuel\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2447&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2447"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2447_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL |Rest_Stakeholder_details(2449)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Updates Delivery Manager",
        "description": "This sscript is used to update delivery manager and project manager on the project record\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2449deploy=1\n",
        "requestBody": {
          "description": "Project Allocation data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2449"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2449_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|REST Allocation Extension(2450)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "To Fetch User Details uisng EmailID",
        "description": "Script is used to Create allocation extension request\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2450&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2450"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2450_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|REST Allocation Request(2451)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Create allocation Request",
        "description": "Script is used to Create allocation request \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2451&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2451"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2451_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|REST Allocation Request(2452)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Create Renewal Request",
        "description": "Script is used to create  Renewal request \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2452&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2452"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2452_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL |Rest_project Renewal withdraw(2453)": {
      "put": {
        "tags": [
          "FUEL"
        ],
        "summary": "Cancel Extension Request",
        "description": "Script is used to withdraw/cancelled\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2453&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2453"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2453_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|Rest Percent allocation Change(2454)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Percent Allocation",
        "description": "Script is used to create percent allocation change request \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2454&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2454"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2454_Response"
                }
              }
            }
          },
          "404": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Please Enter the Values"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|REST_Release_Request(2455)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Create Release request",
        "description": "Script is used to create Release request \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2455&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2455"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2455_Response"
                }
              }
            }
          }
        }
      }
    },
    "/Rest_Prospect_Automation_2.0(2516/2506)": {
      "post": {
        "tags": [
          "SFDC"
        ],
        "summary": "Create Prospect to SFDC",
        "description": "Script is used to create prospect and update the customer from SFDC to NS\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2516&deploy=1\n",
        "requestBody": {
          "description": "SFDC",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2516"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2516_Response"
                }
              }
            }
          }
        }
      }
    },
    "/Rest_Universal_API(2532)": {
      "post": {
        "tags": [
          "BI"
        ],
        "summary": "Create Release request",
        "description": "Script is used to fetch and send result based on the query stored in the Custom Record.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2432&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2532"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2532_Response"
                }
              }
            }
          }
        }
      }
    },
    "/PoleStar Subsidiary Api(2261)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Send Details to PoleStar",
        "description": "Sending Subsidiary details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2007&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Subsidiary",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2261_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Account Api(2262)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Account Details to PoleStar",
        "description": "API to Send Accounts details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2262&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Subsidiary",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2262_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Project Api(2263)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Project Details to PoleStar",
        "description": "Sending Project details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2263&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Subsidiary",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2263_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Vendor Api(2264)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Vendor Details to PoleStar",
        "description": "Sending Vendor details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2264&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Subsidiary",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2264_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Region Api(2265)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Region Details to PoleStar",
        "description": "Sending Region details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2265&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Subsidiary",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2265_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Practice Api(2266)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Region Details to PoleStar",
        "description": "Sending Practice details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2266&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Subsidiary",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2266_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Customer Api(2267)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Customer Details to PoleStar",
        "description": "Sending Customers details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2267&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Subsidiary",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2267_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Item Api(2268)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Item Details to PoleStar",
        "description": "Sending Item details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2268&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Subsidiary",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2268_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Resource Allocation Api(2270)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Sending Details to PoleStar",
        "description": "Sending Resource Allocation for a date range to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2270&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2270_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_API_Employee_Polestar_Table(2271)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Sending Details to PoleStar",
        "description": "Sending Invocie transactions for a date range to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2271 &deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2271_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_API_Employee_Polestar_Table(2272)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Location Details to PoleStar",
        "description": "Sending Location details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2272&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2272_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_API_Employee_Polestar_Table(2273)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "External Project Details to PoleStar",
        "description": "Sending External projects details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2273&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2273_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar OtherName Api(2275)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Other Name to PoleStar",
        "description": "Sending Other Name Details  to PoleStar \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2275&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2275_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Time Api(2287)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Resource Allocatoin to PoleStar",
        "description": "Sending Resource Allocation for a date range to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2287&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2287_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/Rest_Polestar_Api_Invoice(2288)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Invoice Transactions to PoleStar",
        "description": "API to Send Invoice transactios for a date range to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2288&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Account",
            "in": "query",
            "description": "like Income",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Check Api(2276)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Check Details to PoleStar",
        "description": "API to Send Check details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2276&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Account",
            "in": "query",
            "description": "like Income",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Credit Memo Api(2277)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Check Details to PoleStar",
        "description": "Sending Credit Memo details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2277&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Journal Api(2278)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Journal Details to PoleStar",
        "description": "Sending Journal transactios for a date range to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2278&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Account",
            "in": "query",
            "description": "like Income",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Payment Api(2279)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Customer Payment Details to PoleStar",
        "description": "Sending Customer payment details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2279&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Bill Api(2280)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Vendor Bill Details to PoleStar",
        "description": "API to Send Vendor Bill details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2280&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2280_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Bill Api(2281)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Deposit Details to PoleStar",
        "description": "Sending deposite details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2281&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Vendor Credit Api(2282)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Vendor Credit Details to PoleStar",
        "description": "Sending vendor credit records for a date range to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2281&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Vendor Payment Api(2283)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Vendor Payments Details to PoleStar",
        "description": "Sending Vendor Payment records for a date range to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2283&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Expense Report Api(2285)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Vendor Payments Details to PoleStar",
        "description": "Sending Expense Reports details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2285&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Currency Valuation Api(2286)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Currency Details to PoleStar",
        "description": "Sending Currency Valuation details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2286&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Start Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "End Date",
            "in": "query",
            "description": "MM/DD/YYYY format",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST Vertical Api(2484)": {
      "get": {
        "tags": [
          "FUEL"
        ],
        "summary": "Currency Details to PoleStar",
        "description": "Sends active and inactive vertical,micro vertical,investor vertical,verticalmaster details.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2484&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request Data",
            "in": "query",
            "description": "like Resource Allocation",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2484_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST Employee Data OTG_V2.0(2864)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Employee Details",
        "description": "Send the Employee Details\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2864&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Date and Time",
            "in": "query",
            "description": "Format DATETIMEETZ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2864_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_OTG_Employee_Data_V2.0(2871)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Fetch Employee Details",
        "description": "RESTlet Script to retrive Employee details using Employee ID\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2871&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Employee ID",
            "in": "query",
            "description": "integer",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2871_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_OTG_EmployeeData_V2.0(2636)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Employee Details",
        "description": "Returns all the active Employee Details \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2636&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Date and Time",
            "in": "query",
            "description": "Format DATETIMEETZ",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2636_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Currency Exchange Rate Api(2269)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Currency Details to PoleStar",
        "description": "Sending Currency Exchange Rate details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2269&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestData",
            "in": "query",
            "description": "like CURRENCYEXCHANGE",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestParameter",
            "in": "query",
            "description": "like YEARLY",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2269_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/PoleStar Mobile Holiday Api(2274)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "Holiday Details to PoleStar",
        "description": "Sending Mobile Holiday Calender custom record details to PoleStar\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2274&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestData",
            "in": "query",
            "description": "like CURRENCYEXCHANGE",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestDate",
            "in": "query",
            "description": "Format MM/DD/YYYY",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2274_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_Polestar_Access_Record(2339)": {
      "get": {
        "tags": [
          "BI"
        ],
        "summary": "BI access record to PoleStar",
        "description": "API to send BI access record details \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2339&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestData",
            "in": "query",
            "description": "like CURRENCYEXCHANGE",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestDate",
            "in": "query",
            "description": "Format MM/DD/YYYY",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2339_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_OTG_TS_Approve_Reject_V2.0(2528)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "Approve/Reject Timesheet",
        "description": "This script will approve or reject the timesheet (OTG not calling pending timesheet details request(2643-SB)\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2580&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET, APPROVE, REJECT",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Employee ID",
            "in": "query",
            "description": "Enter the 6 digit number",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "Data",
            "in": "query",
            "description": "timeSheet id",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "TimeSheetId": {
                  "type": "string",
                  "format": "integer",
                  "description": "enter the id"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/2528_Response_1"
                    },
                    {
                      "$ref": "#/components/schemas/2528_Response_2"
                    },
                    {
                      "$ref": "#/components/schemas/2528_Response_3"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/REST_OTG_Send_Daily_TS_Updates(2319)": {
      "get": {
        "tags": [
          "On The Go"
        ],
        "summary": "TS Updates",
        "description": "Script is used to Send the TS filled of the day\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2319&deploy=1\n",
        "parameters": [
          {
            "name": "Request Type",
            "in": "query",
            "description": "like GET",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "RequestDate",
            "in": "query",
            "description": "Format MM/DD/YYYY",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "ToDate",
            "in": "query",
            "description": "Format MM/DD/YYYY",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2319_Response"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "404": {
            "description": "Expense not found"
          }
        }
      }
    },
    "/FUEL | Assigned PM and DM - REST(1842)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Save PM and DM",
        "description": "Save PM and DM into opportunities.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1842&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1842"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1842_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Assigned PM and DM 2- REST(1845)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Get PM and DM",
        "description": "Get project manager and delivery manager for existing opportunities.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1845&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1845"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1845_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Resource_Allocartion_Creation(2785)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Get PM and DM",
        "description": "Get project manager and delivery manager for existing opportunities.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2785&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2785"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2785_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Assign New DM - REST(1975)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Create and Delete DM",
        "description": "Script Create and Delete DM in Netsuite requested by FUEL\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1975&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1975"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1975_Response"
                }
              }
            }
          },
          "404": {
            "description": "Error - Not Found",
            "content": {
              "application/json": {
                "example": {
                  "messsage": "User does not exist"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Bench View - REST(1844)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Bench View to FUEL",
        "description": "Script to send Bench view to FUEL \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1844&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1844"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1844_Response"
                }
              }
            }
          },
          "404": {
            "description": "Error - Not Found",
            "content": {
              "application/json": {
                "example": {
                  "messsage": "User does not exist"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Employee Skill Match - REST(1778)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Employee Sugessition",
        "description": "This is script which will give you suggestion on the basis of practice and skills.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1778deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1778"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1778_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Get Allocation for FRF - REST(1780)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Allocation Details to FUEL",
        "description": "Sending allocation details for the allocated resource on FRF to FUEL\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1780deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1780"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1780_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Get Project Details_1 - REST(1855)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Allocation Details to FUEL",
        "description": "Sending Opportunity, Fulfillment and Revenue details based on opp id to FUEL\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1855deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1855"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1855_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Get Soft Lock Options - REST(1779)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Empl Details to FUEL",
        "description": "Get softlock resource options based on date and skills \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1779deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1779"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1779_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Record doesnot exist"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "FRF Does not exists in database!"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Get PM and DM - REST(1840)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Employee Details to FUEL",
        "description": "Sending Employee list to FUEL\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1840deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1840"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1840_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Location Polling Api(2232)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Employee Details to FUEL",
        "description": "Sending location details to FUEL\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1840deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2232"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2232_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Project View - REST(1852)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Sending Details to FUEL",
        "description": "Sending Project, Opportunity and Sales Order details to FUEL as per Project ID\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1852deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1852"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1852_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | Project View - REST(1848)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Sending Allocation Details to FUEL",
        "description": "Sending the details of Allocation, FRF Details based on Opp id/ Project id \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1848deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1848"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1848_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL | REST_AssignedTraining(1850)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Sending Allocation Details to FUEL",
        "description": "RESTlet to show assign training data \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1850deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1850"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1850_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/New  M Expense Details OTG V2.0(2011)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Check expense",
        "description": "Used by OTG to check past and Pending Expenses \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2011deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2011"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/2011_Response_1"
                    },
                    {
                      "$ref": "#/components/schemas/2011_Response_2"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/PR_Requestion_Create_Status_Load_API(2128)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Check expense",
        "description": "Creating Purchase Request through OnTheGo\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2128deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2128"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2128_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/REST Codex API For Participating Practic(1208)": {
      "post": {
        "tags": [
          "CodeX"
        ],
        "summary": "Provides Response",
        "description": "API provides the response on modified date time with with all the participating practice list and resources respectively\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1208deploy=1\n",
        "requestBody": {
          "description": "SFDC",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1208"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1208_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/REST Codex API For Practice Master(1450)": {
      "post": {
        "tags": [
          "CodeX"
        ],
        "summary": "Deatils of Practice Master to CodeX",
        "description": "API Provides details of Practice Master to codex\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1450deploy=1\n",
        "requestBody": {
          "description": "CodeX",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1450"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1450_Response"
                }
              }
            }
          },
          "400": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "error"
                }
              }
            }
          }
        }
      }
    },
    "/REST Cost Per FTE Pulling API(2078)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "FTE Deatils to FUEL",
        "description": "Sending  FTE cost  details to FUEL\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2078deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2078"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2078_Response"
                }
              }
            }
          }
        }
      }
    },
    "/Rest Employee Sync For Codex and OTG(2095)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Emp Pull",
        "description": "Used for emp pull for OTG and Codex\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2095deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2095"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2095_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST Forecast Summary Pulling(2096)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Bench Details to SFDC",
        "description": "Sending Bench resource details and FUEL -SFDC revenue details based on request type \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2096deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2096"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2096_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST Get Employee Approvers(2001)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Details of Approver",
        "description": "Sending the details of Approvers like Time Approver, Reporting Manager, Expense Apporver \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2096deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2001"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2001_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Allocation Details(825)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Sending Resource ALlocation Details",
        "description": "Sending Resource Allocation details based on employee or allocation id\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2096deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/825"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/825_Response_1"
                    },
                    {
                      "$ref": "#/components/schemas/825_Response_2"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/REST M Allocation Details(1226)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Project And Resource Details",
        "description": "New version for allocation details -28th JUN 17\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1226deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1226"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/1226_Response_1"
                    },
                    {
                      "$ref": "#/components/schemas/1226_Response_2"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/REST M Employee Hierarchy OTG V1.0(1569)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "EMployee Details to OTG",
        "description": "API Provides Employees details like Prctice wise employees, One person details, EmployeeHierarchy To ONTHGO\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1569&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1569"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/1569_Response_1"
                    },
                    {
                      "$ref": "#/components/schemas/1569_Response_2"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/REST M Employee Hirerachy OTG(1227)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "EMployee Details to OTG",
        "description": "New version for employee hirerachy\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1227&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1227"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1227_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Employee Information(801)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Proves Employee Details",
        "description": "API Proves Employees Details\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=801&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/801"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/801_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Expense Details OTG(1231)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Creates/Updates NS expenses",
        "description": "API Creates/Updates Expenses In NS based on OnThGO Request\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1231&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1231"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1231_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Expense For Saving(1112)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Creates/Updates NS expenses",
        "description": "On Expense save event triggering from mobile App\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1112&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1112"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/1112_Response"
                    },
                    {
                      "$ref": "#/components/schemas/1112_Response_Update"
                    },
                    {
                      "$ref": "#/components/schemas/1112_Response_Delete"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/REST M Expense Get Project Details(1111)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Project Details",
        "description": "Gets the project details and category for logged user\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1111&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1111"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1111_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Expense InProgress(1674)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Project Details",
        "description": "API Provides Expense details for the requested Expense to ONTHGO\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1674&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1674"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1674_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Expenses(800)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Project Details",
        "description": "API Provides Expense details which are pending with respective approver\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=800&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/800"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/800_Response_1"
                    },
                    {
                      "$ref": "#/components/schemas/800_Response_2"
                    }
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/REST M Forgot Password(871)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Project Details",
        "description": "RESTlet for the mobile app forgot password module.\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=871&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/871"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/871_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Login(799)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Project Details",
        "description": "Mobility RESTlet for login\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=871&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/799"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/799_Response"
                }
              }
            }
          },
          "400": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "example": {
                  "message": "Incorrect User Name or Password"
                }
              }
            }
          }
        }
      }
    },
    "/REST M TS AutoFill(1465)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Timesheet Details",
        "description": "Script to Autofill based on allocation and also fetches the already submitted timesheet data for the week\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1465&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1465"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1465_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST New M Expense Approval OTG V2.0(2009)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Expense Details",
        "description": "Used by OTG to get list of expenses to be approved by approver \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2009&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2009"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2009_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST Project level P&L CODEX(1890)": {
      "post": {
        "tags": [
          "CodeX"
        ],
        "summary": "Project Details",
        "description": "API Provides Projects Sold margin, Actual margin for the requested project\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1890&deploy=1\n",
        "requestBody": {
          "description": "On The Go",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1890"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1890_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST Sharepoint Employee(891)": {
      "post": {
        "tags": [
          "Share Point"
        ],
        "summary": "Employee Details",
        "description": "API to send Employee details to SharePoint \nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=891&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/891"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/891_Response"
                }
              }
            }
          }
        }
      }
    },
    "/Restlet_Ext_Allocation_Details_For_SFDC(2123)": {
      "post": {
        "tags": [
          "SFDC"
        ],
        "summary": "Employee Details",
        "description": "API to get all the values from resource allocation search and it return all the columns value into JSONObj to send to SFDC\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=891&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2123"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2123_Response"
                }
              }
            }
          }
        }
      }
    },
    "/RESTlet_ResourceAllocationData_CODEX(1672)": {
      "post": {
        "tags": [
          "CodeX"
        ],
        "summary": "Employee Details",
        "description": "API to send active resource allocation data to Codex\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=891&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1672"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1672_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Delivery_Anchor(2067)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Employee Details",
        "description": "API to send Fuel Delivery anchor details to FUEL\n\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=891&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2067"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2067_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_access_opp_pm_dm(2063)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Employee Details",
        "description": "API to send SFDC opportunity record to FUEL \n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=891&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2063"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2063_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_EmployeeSearch(1786)": {
      "post": {
        "tags": [
          "Fusion"
        ],
        "summary": "Search Details",
        "description": "RESTlet for Search by Employee and Search by Skills - FUEL\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=891&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1786"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1786_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Employee_ApproverList V2.0(2015)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Search Details",
        "description": "Used by OTG to get all master of Approvals \n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2015&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2015"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2015_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Employee_Skill(2062)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Search Details",
        "description": "Sending Employee Skill With Tech Role details \n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2062&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2062"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2062_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_ExpDetails_OTG V2.0(2010)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Check the NonSubmitted Expense",
        "description": "Used by OTG to check the Non submitted Expense \n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2062&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2010"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2010_Response"
                }
              }
            }
          }
        }
      }
    },
    "/Rest_Fuel_employee_experince(2038)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Check the NonSubmitted Expense",
        "description": "Restlet to send Employee experience data based on date to FUEL\n\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2038&deploy=1\n",
        "requestBody": {
          "description": "Share Point",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2038"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2038_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_FulfillmentTeamDashboard(1853)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Check the NonSubmitted Expense",
        "description": "Restlet to send details of RESTlet for Fulfillment team dashboard to FUEL\n\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1853&deploy=1\n",
        "requestBody": {
          "description": "Fuel",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1853"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1853_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_GOAL_REPORT_OTG(2210)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Resource Allocation Details",
        "description": "This is used to Provide Resource allocation details to help OTG for Goals summary\n\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2210&deploy=1\n",
        "requestBody": {
          "description": "OTG",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2210"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2210_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Leadership(2068)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Resource Allocation Details",
        "description": "Sending FUEL leadership details between date range \n\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2068&deploy=1\n",
        "requestBody": {
          "description": "Fuel",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2068"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2068_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Long_Leave_Pulling(2070)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Leave Details",
        "description": "API to send Long leave details to FUEL \n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2070&deploy=1\n",
        "requestBody": {
          "description": "Fuel",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2070"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2070_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Practice_SPOC(2069)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Practice Details",
        "description": "API to send practice sopc details to FUEL\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2069&deploy=1\n",
        "requestBody": {
          "description": "Fuel",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2069"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2069_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_ProjectView(1787)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Practice Details",
        "description": "API to send Project Details to FUEL\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1787&deploy=1\n",
        "requestBody": {
          "description": "Fuel",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1787"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1787_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Project_Margin_CODEX(1887)": {
      "post": {
        "tags": [
          "CodeX"
        ],
        "summary": "Sending Amount Details",
        "description": "System should send actual amount along with Period\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1787&deploy=1\n",
        "requestBody": {
          "description": "Codex",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1887"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1887_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Project_Margin_CODEX_FPA(2204)": {
      "post": {
        "tags": [
          "CodeX"
        ],
        "summary": "Sending Amount Details",
        "description": "API Provides Actual details to Codex\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2204&deploy=1\n",
        "requestBody": {
          "description": "Codex",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2204"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2204_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_skill(2064)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Sending Primary Skills Details",
        "description": "Restlet to send Primary skills details\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2204&deploy=1\n",
        "requestBody": {
          "description": "Fuel",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2064"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2064_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST|Resource Allocation Dump Export(2002)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Sending Primary Skills Details",
        "description": "Api to send Resource Allocation details within date rage provided through request\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2002&deploy=1\n",
        "requestBody": {
          "description": "Fuel",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2002"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2002_Response"
                }
              }
            }
          }
        }
      }
    },
    "/Silk Road Sync back to SR(2126)": {
      "post": {
        "tags": [
          "SilkRoad"
        ],
        "summary": "Sending Employee Details to SilkRoad",
        "description": "Sending details of any changes on Employee record to Silkroad\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2126&deploy=1\n",
        "requestBody": {
          "description": "SilkRoad",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2126"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2126_Response"
                }
              }
            }
          }
        }
      }
    },
    "/SOW polling(2258)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Sending Primary Skills Details",
        "description": "API to send SOW details to FUEL based on date range\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2002&deploy=1\n",
        "requestBody": {
          "description": "Fuel",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2258"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2258_Response"
                }
              }
            }
          }
        }
      }
    },
    "/PoleStar Currency Api(2317)": {
      "post": {
        "tags": [
          "BI"
        ],
        "summary": "Sending Currency Details to PoleStar",
        "description": "API to send currency data to Polestar\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2317&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2317"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2317_Response"
                }
              }
            }
          }
        }
      }
    },
    "/PoleStar Daily HeadCount Api(2318)": {
      "post": {
        "tags": [
          "BI"
        ],
        "summary": "Head Count to PoleStar",
        "description": "API to send head count data to Ploestar\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2318&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2318"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2318_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_OTG_Travel_Request_Script(2411)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Create Travel Request",
        "description": "API to create /Update Travel Request based on request from OnTheGo\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2411&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2411"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2411_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST | ResourceAllocationVariance(2428)": {
      "post": {
        "tags": [
          "BI"
        ],
        "summary": "Send Resource Allocation Details",
        "description": "Script is used to Send Resource Allocation Detail for the resource that are allocated today.\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2411&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2428"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2428_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_PracticeMaster_OTG(2481)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Send Resource Allocation Details",
        "description": "Sends practice master details along with Practice head details\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2481&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2481"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2481_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_EmployeeMaster_CodeX_2.0(2523)": {
      "post": {
        "tags": [
          "CodeX"
        ],
        "summary": "Sends Employee Master Details",
        "description": "Sends the employee master (all Active employee details) details \n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2481&deploy=1\n",
        "requestBody": {
          "description": "Codex",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2523"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2523_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_SoW_Creation_SFDC_2.0(2507)": {
      "post": {
        "tags": [
          "SDFC"
        ],
        "summary": "Sends Employee Master Details",
        "description": "Sends the employee master (all Active employee details) details \n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2481&deploy=1\n",
        "requestBody": {
          "description": "SFDC",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2507"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2507_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST TM ForeCast SFDC V2.0(2510)": {
      "post": {
        "tags": [
          "SDFC"
        ],
        "summary": "Sends Employee Master Details",
        "description": "Sends the employee master (all Active employee details) details \n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2481&deploy=1\n",
        "requestBody": {
          "description": "SFDC",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2510"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2510_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL REST Practice data pulling(2059)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Sends Practice Details",
        "description": "API to Sending Practice data to FUEL\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2481&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2059"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2059_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL REST Resource Allocation Pulling(2060)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Sends Practice Details",
        "description": "API to Sending Resource Allocation data to FUEL\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2060&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2060"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2060_Response"
                }
              }
            }
          }
        }
      }
    },
    "/Fusion Employee Experience JSON store(2044)": {
      "post": {
        "tags": [
          "Fusion"
        ],
        "summary": "Create JSON data",
        "description": "API Creating Fusion- Employee Experience JSON Master record based on employee details\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2044&deploy=1\n",
        "requestBody": {
          "description": "Fusion",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2044"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2044_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST Actual Flow SFDC On Changes(1635)": {
      "post": {
        "tags": [
          "SFDC"
        ],
        "summary": "Transaction Response",
        "description": "API provides the response with  revenue and discount actual transactions that are posted on requested duration or period o SFDC\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1635&deploy=1\n",
        "requestBody": {
          "description": "Fusion",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1635"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1635_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Expense On Save OTG(1229)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Transaction Response",
        "description": "API is used to create/update/delete expenses through ONTHGO\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1635&deploy=1\n",
        "requestBody": {
          "description": "OTG",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1229"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1229_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Expense Project Details(1247)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Transaction Response",
        "description": "API Provides Employee details which are required to create expense in ONTHGO\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1247&deploy=1\n",
        "requestBody": {
          "description": "OTG",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1247"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1247_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST M Expense Project Details(1783)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Skill Detials to FUEL",
        "description": "Trestlet to send Skill details based on skill family to FUEL\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1783&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1783"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1783_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST| Employee Skill with Tech Role(1987)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Skill Detials to FUEL",
        "description": "API to create Employee skill master data to Netsuite through FUEL\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=1987&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/1987"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/1987_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST_Polestar_Send_Report_Data(2316)": {
      "post": {
        "tags": [
          "BI"
        ],
        "summary": "Resource Allocation Detials",
        "description": "API to send resource allocation data\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2316&deploy=1\n",
        "requestBody": {
          "description": "BI",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2316"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2316_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST | SC_NS | Vendor - Create/Update(2350)": {
      "post": {
        "tags": [
          "SimpliContract"
        ],
        "summary": "Create/Update vendor",
        "description": "API for creation/updation of Vendor in Netsuite from SimpliContract\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2350&deploy=1\n",
        "requestBody": {
          "description": "SC",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2350"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2350_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|Rest_Role_Delegation(2448)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "Create/Update vendor",
        "description": "This script is used to create role deligation of project\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2448&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2448"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Record created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2448_Response"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|Rest_Release_Request_withdraw(2456)": {
      "put": {
        "tags": [
          "FUEL"
        ],
        "summary": "Cancel/Withdraw Release Request",
        "description": "Script is used to cancelled withdrawn release request\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2456&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2456"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2456_Response"
                }
              }
            }
          },
          "201": {
            "description": "requset cancelled",
            "content": {
              "application/json": {
                "example": {
                  "message": "requset cancelled"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Please enter Release Request ID"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|REST Percent Change Withdraw(2478)": {
      "put": {
        "tags": [
          "FUEL"
        ],
        "summary": "Cancel/Withdraw Change Request",
        "description": "Script is used to cancelled/withdrawn Percent allocation change request \n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2478&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2478"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Requset cancelled",
            "content": {
              "application/json": {
                "example": {
                  "message": "Request is already Cancelled"
                }
              }
            }
          },
          "201": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2478_Response"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Please enter Release Request ID"
                }
              }
            }
          }
        }
      }
    },
    "/REST_OTG_EmployeeData_V2.0(2529)": {
      "post": {
        "tags": [
          "On The Go"
        ],
        "summary": "Employee List",
        "description": "Sends active and inactive employee details\n\n The Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2478&deploy=1\n",
        "requestBody": {
          "description": "OTG",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2529"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2529_Response"
                }
              }
            }
          }
        }
      }
    },
    "/REST Actual Flow SFDC On Changes 2.0(2524)": {
      "post": {
        "tags": [
          "SFDC"
        ],
        "summary": "Flow SFDC",
        "description": "\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=2478&deploy=1\n",
        "requestBody": {
          "description": "SFDC",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2524"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/2524_Response"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Some error with the data sent"
                }
              }
            }
          }
        }
      }
    },
    "/SFDC | SOW Reject(3118)": {
      "post": {
        "tags": [
          "SFDC"
        ],
        "summary": "SFDC Reject",
        "description": "\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=3118&deploy=1\n",
        "requestBody": {
          "description": "SFDC",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/3118"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/3118_Response"
                }
              }
            }
          },
          "401": {
            "description": "Error",
            "content": {
              "application/json": {
                "example": {
                  "message": "Some error with the data sent"
                }
              }
            }
          }
        }
      }
    },
    "/FUEL|BRL_RES_ConsumeFileDetails(2457)": {
      "post": {
        "tags": [
          "FUEL"
        ],
        "summary": "SFDC Reject",
        "description": "\n\nThe Sample URL looks like - https://restlets.api.netsuite.com/app/site/hosting/restlet.nl?script=3118&deploy=1\n",
        "requestBody": {
          "description": "FUEL",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/2457"
              }
            }
          }
        },
        "parameters": [
          {
            "in": "query",
            "name": "script",
            "description": "The script parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "deploy",
            "description": "The deploy parameter",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "example": {
                  "message": "File Uploaded Successfuly"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "799": {
        "type": "object",
        "properties": {
          "UserName": {
            "type": "string"
          },
          "Password": {
            "type": "string"
          }
        }
      },
      "800": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "expenseId": {
                "type": "string"
              }
            }
          }
        }
      },
      "801": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Person": {
                "type": "string"
              }
            }
          }
        }
      },
      "825": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "AllocationId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          }
        }
      },
      "871": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          }
        }
      },
      "891": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          }
        }
      },
      "1111": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "Date": {
            "type": "string"
          }
        }
      },
      "1112": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string",
            "example": "GETALL"
          },
          "Data": {
            "type": "object",
            "properties": {
              "ExpenseID": {
                "type": "string"
              }
            }
          }
        }
      },
      "1208": {
        "type": "object",
        "properties": {
          "LastInstaceDate": {
            "type": "string"
          }
        }
      },
      "1226": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "AllocationId": {
                "type": "string"
              },
              "IsProjectManager": {
                "type": "string"
              }
            }
          }
        }
      },
      "1227": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "ID": {
                "type": "string"
              }
            }
          }
        }
      },
      "1229": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "expenseId": {
            "type": "string"
          }
        }
      },
      "1231": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "ExpenseID": {
                "type": "string"
              }
            }
          }
        }
      },
      "1232": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          }
        },
        "required": [
          "EmailId"
        ]
      },
      "1247": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Date": {
                "type": "string"
              }
            }
          }
        }
      },
      "1450": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          }
        }
      },
      "1465": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "WeekStartDate": {
                "type": "string"
              }
            }
          }
        }
      },
      "1569": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "ID": {
                "type": "string"
              }
            }
          }
        }
      },
      "1635": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "1672": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          }
        }
      },
      "1674": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "ExpenseID": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          }
        }
      },
      "1778": {
        "type": "object",
        "properties": {
          "mandatorySkills": {
            "type": "array",
            "items": {}
          },
          "startDate": {
            "type": "string"
          }
        }
      },
      "1779": {
        "type": "object",
        "properties": {
          "mandatorySkills": {
            "type": "array",
            "items": {}
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "mode": {
            "type": "integer"
          },
          "frfNumber": {
            "type": "string"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "1780": {
        "type": "object",
        "properties": {
          "frf": {
            "type": "object",
            "items": {}
          }
        }
      },
      "1783": {
        "type": "object",
        "properties": {
          "skill_family": {
            "type": "string"
          }
        }
      },
      "1786": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          }
        }
      },
      "1787": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "projectid": {
            "type": "string"
          },
          "oppid": {
            "type": "string"
          }
        }
      },
      "1791": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "pattern": "^(0?[1-9]|[12][0-9]|3[01])$"
          },
          "Month": {
            "type": "string",
            "pattern": "^(0?[1-9]|1[0-2])$"
          },
          "Year": {
            "type": "string",
            "pattern": "^[0-9]{4}$"
          }
        },
        "required": [
          "RequestType",
          "Date",
          "Month",
          "Year"
        ]
      },
      "1840": {
        "type": "object",
        "items": {}
      },
      "1842": {
        "type": "object",
        "properties": {
          "empId": {
            "type": "integer"
          },
          "oppId": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          }
        },
        "required": [
          "empId",
          "oppId",
          "designation"
        ]
      },
      "1844": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          }
        }
      },
      "1845": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          }
        },
        "required": [
          "user"
        ]
      },
      "1848": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          },
          "projectId": {
            "type": "string"
          },
          "oppid": {
            "type": "string"
          }
        }
      },
      "1850": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Like get, save, completed"
          },
          "user": {
            "type": "string"
          }
        }
      },
      "1852": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string"
          }
        }
      },
      "1853": {
        "type": "object",
        "properties": {
          "user": {
            "type": "string"
          }
        }
      },
      "1855": {
        "type": "object",
        "properties": {
          "oppId": {
            "type": "string"
          }
        }
      },
      "1887": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string"
          }
        }
      },
      "1890": {
        "type": "string",
        "properties": {
          "project": {
            "type": "string"
          }
        }
      },
      "1975": {
        "type": "object",
        "properties": {
          "userEmailId": {
            "type": "string"
          },
          "accountInternalId": {
            "type": "integer"
          },
          "addDMList": {
            "type": "object",
            "properties": {
              "employeeInternalId": {
                "type": "object"
              },
              "practiceInternalId": {
                "type": "object"
              }
            }
          },
          "deleteDMList": {
            "type": "array",
            "items": {}
          }
        }
      },
      "1987": {
        "type": "object",
        "properties": {
          "userEmailId": {
            "type": "string"
          },
          "addSkillList": {
            "type": "string"
          },
          "editSkillList": {
            "type": "string"
          },
          "deleteSkillList": {
            "type": "string"
          }
        }
      },
      "2001": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          }
        }
      },
      "2002": {
        "type": "object",
        "properties": {
          "startDateTime": {
            "type": "string"
          }
        }
      },
      "2009": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "ExpenseId": {
                "type": "string"
              },
              "Remarks": {
                "type": "string"
              }
            }
          }
        }
      },
      "2010": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "ExpenseID": {
                "type": "string"
              }
            }
          }
        }
      },
      "2011": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          },
          "RequestType": {
            "type": "string"
          }
        }
      },
      "2015": {
        "type": "object",
        "properties": {
          "EmailId": {
            "type": "string"
          }
        }
      },
      "2038": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2044": {
        "type": "object"
      },
      "2059": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2060": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "2062": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2063": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2064": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2067": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2068": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2069": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2070": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2078": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2095": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2096": {
        "type": "object",
        "properties": {
          "benchDataRequest": {
            "type": "string"
          },
          "revenueDataRequest": {
            "type": "string"
          }
        }
      },
      "2123": {
        "type": "object"
      },
      "2126": {
        "type": "object",
        "properties": {
          "lastmodifieddate": {
            "type": "string"
          }
        }
      },
      "2128": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          },
          "Emailid": {
            "type": "string"
          }
        }
      },
      "2204": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string"
          }
        }
      },
      "2210": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          },
          "EmailId": {
            "type": "string"
          }
        }
      },
      "2232": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2258": {
        "type": "object",
        "properties": {
          "lastUpdatedTimestamp": {
            "type": "string"
          }
        }
      },
      "2316": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          },
          "RequestData": {
            "type": "string"
          },
          "start_date": {
            "type": "string",
            "format": "date"
          },
          "end_date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "2317": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          },
          "RequestData": {
            "type": "string"
          }
        }
      },
      "2318": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          },
          "RequestData": {
            "type": "string"
          }
        }
      },
      "2350": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          }
        }
      },
      "2411": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          }
        }
      },
      "2428": {
        "type": "object"
      },
      "2444": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "requestId": {
            "type": "integer"
          },
          "employee": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "integer"
              }
            }
          },
          "EmployeePractice": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "integer"
              }
            }
          },
          "workLocationType": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "string"
              }
            }
          },
          "Shift_Info": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "string"
              }
            }
          },
          "Bill_Option": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "string"
              }
            }
          },
          "Start_Date": {
            "type": "string",
            "format": "date"
          },
          "End_Date": {
            "type": "string",
            "format": "date"
          },
          "AllocationPercent": {
            "type": "integer"
          },
          "ProjectName": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "integer"
              }
            }
          },
          "ResourceWorkLocation": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "string"
              }
            }
          },
          "BillRate": {
            "type": "integer"
          },
          "OTRate": {
            "type": "integer"
          },
          "effectivedate": {
            "type": "string",
            "format": "date"
          },
          "FRF": {
            "type": "string"
          },
          "remarks": {
            "type": "string"
          },
          "requestor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "type",
          "employee",
          "EmployeePractice",
          "workLocationType",
          "Shift_Info",
          "Bill_Option",
          "Start_Date",
          "End_Date",
          "AllocationPercent",
          "ProjectName",
          "ResourceWorkLocation",
          "OTRate",
          "effectivedate",
          "FRF",
          "remarks",
          "requestor"
        ]
      },
      "2445": {
        "type": "object",
        "properties": {
          "EditAllocationId": {
            "type": "integer"
          },
          "userEmail": {
            "type": "string"
          },
          "remark": {
            "type": "string"
          }
        },
        "required": [
          "EditAllocationId",
          "userEmail",
          "remark"
        ]
      },
      "2446": {
        "type": "object",
        "properties": {
          "ExtensionId": {
            "type": "integer"
          },
          "userEmail": {
            "type": "string"
          },
          "remark": {
            "type": "string"
          }
        }
      },
      "2447": {
        "type": "object",
        "properties": {
          "Request ID": {
            "type": "integer"
          },
          "User Mail ID": {
            "type": "string"
          }
        }
      },
      "2448": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string"
          },
          "projectInternalid": {
            "type": "string"
          },
          "Employee": {
            "type": "object",
            "properties": {
              "Internal_id": {
                "type": "string"
              }
            }
          },
          "EndDate": {
            "type": "string"
          },
          "Action": {
            "type": "string"
          },
          "RoleDelegationId": {
            "type": "string"
          }
        }
      },
      "2449": {
        "type": "object",
        "properties": {
          "recordType": {
            "type": "string"
          },
          "accountInternalId": {
            "type": "string"
          },
          "deliveryPartner": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "recordType",
          "accountInternalId",
          "deliveryPartner"
        ]
      },
      "2450": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string"
          },
          "raisedfromBillable": {
            "type": "boolean"
          },
          "nsInternalId": {
            "type": "integer"
          },
          "employee": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "InternalId": {
                "type": "string"
              }
            }
          },
          "EmployeePractice": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "string"
              }
            }
          },
          "Start_Date": {
            "type": "string",
            "format": "date"
          },
          "End_Date": {
            "type": "string",
            "format": "date"
          },
          "AllocationPercent": {
            "type": "string"
          },
          "ProjectName": {
            "type": "string"
          },
          "ResourceWorkLocation": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "internal_id": {
                "type": "string"
              }
            }
          },
          "Remark": {
            "type": "string"
          },
          "requestor": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "requestId": {
            "type": "integer"
          },
          "account": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "type",
          "subtype",
          "raisedfromBillable",
          "employee",
          "EmployeePractice",
          "Start_Date",
          "End_Date",
          "AllocationPercent",
          "ResourceWorkLocation",
          "Remark",
          "requestor",
          "account"
        ]
      },
      "2451": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "subtype": {
            "type": "string"
          },
          "employee": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "InternalId": {
                "type": "integer"
              }
            }
          },
          "EmployeePractice": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "integer"
              }
            }
          },
          "Client_BGC_Check_required": {
            "type": "boolean"
          },
          "hjgcjcj_ cj": {
            "type": "string"
          },
          "AllocationType": {
            "type": "string"
          },
          "workLocationType": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "internal_id": {
                "type": "integer"
              }
            }
          },
          "ShiftInfo": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "Internal_id": {
                "type": "integer"
              }
            }
          },
          "Bill_Option": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "internal_id": {
                "type": "integer"
              }
            }
          },
          "Start_Date": {
            "type": "string",
            "format": "date"
          },
          "End_Date": {
            "type": "string",
            "format": "date"
          },
          "AllocationPercent": {
            "type": "integer"
          },
          "ProjectName": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "internal_id": {
                "type": "integer"
              }
            }
          },
          "SoftLockDate": {
            "type": "string"
          },
          "ResourceWorkLocation": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              },
              "internal_id": {
                "type": "integer"
              }
            }
          },
          "BillRate": {
            "type": "string"
          },
          "OTRate": {
            "type": "string"
          },
          "BillingStartDate": {
            "type": "string",
            "format": "date"
          },
          "BillingEndDate": {
            "type": "string",
            "format": "date"
          },
          "Remark": {
            "type": "string"
          },
          "FRF": {
            "type": "string"
          },
          "requestor": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              }
            }
          },
          "requestId": {
            "type": "integer"
          },
          "hiringManager": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "internal_id": {
                "type": "integer"
              }
            }
          }
        },
        "required": [
          "type",
          "subtype",
          "employee",
          "EmployeePractice",
          "Client_BGC_Check_required",
          "workLocationType",
          "ShiftInfo",
          "Bill_Option",
          "Start_Date",
          "End_Date",
          "AllocationPercent",
          "ProjectName",
          "SoftLockDate",
          "ResourceWorkLocation",
          "BillRate",
          "OTRate",
          "BillingStartDate",
          "BillingEndDate",
          "Remark",
          "FRF",
          "requestor",
          "requestId",
          "hiringManager"
        ]
      },
      "2452": {
        "type": "object",
        "properties": {
          "formId": {
            "type": "string"
          },
          "formtype": {
            "type": "string"
          },
          "opportunityId": {
            "type": "string"
          },
          "OpportunityName": {
            "type": "string"
          },
          "tcv": {
            "type": "string"
          },
          "soldMargin": {
            "type": "integer"
          },
          "projectStartDate": {
            "type": "string",
            "format": "date"
          },
          "projectEndDate": {
            "type": "string",
            "format": "date"
          },
          "remarks": {
            "type": "string"
          },
          "IsNoDoc": {
            "type": "boolean"
          },
          "IsDraftSOW": {
            "type": "boolean"
          },
          "billingType": {
            "type": "object",
            "properties": {
              "internalId": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "milestoneSchedule": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "milestoneName": {
                  "type": "string"
                },
                "expectedDate": {
                  "type": "string"
                },
                "invoiceAmount": {
                  "type": "integer"
                },
                "isDeleted": {
                  "type": "boolean"
                },
                "id": {
                  "type": "integer"
                },
                "fuelId": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          },
          "requestor": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "internalID": {
                "type": "integer"
              }
            }
          },
          "project": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              }
            }
          },
          "files": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "document_type": {
                  "type": "string"
                },
                "link": {
                  "type": "string"
                },
                "version": {
                  "type": "integer"
                },
                "Isdeleted": {
                  "type": "boolean"
                },
                "fileExtension": {
                  "type": "string"
                }
              }
            }
          },
          "projectionStatus": {
            "type": "string"
          },
          "opportunityStage": {
            "type": "string"
          }
        },
        "required": [
          "formId",
          "formtype",
          "opportunityId",
          "OpportunityName",
          "tcv",
          "soldMargin",
          "projectStartDate",
          "projectEndDate",
          "remarks",
          "IsNoDoc",
          "IsDraftSOW",
          "billingType",
          "milestoneSchedule",
          "requestor",
          "project",
          "files",
          "projectionStatus",
          "opportunityStage"
        ]
      },
      "2453": {
        "type": "object",
        "properties": {
          "nsFormId": {
            "type": "integer"
          },
          "userEmail": {
            "type": "string"
          },
          "remark": {
            "type": "string"
          }
        }
      },
      "2454": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "employee": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "project": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "practice": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "allocationId": {
            "type": "integer"
          },
          "allocationPercent": {
            "type": "integer"
          },
          "projectEndDate": {
            "type": "string",
            "format": "date"
          },
          "allocationEnddate": {
            "type": "string",
            "format": "date"
          },
          "effectiveDateOfChange": {
            "type": "string",
            "format": "date"
          },
          "NewAllocationPercent": {
            "type": "integer"
          },
          "remarks": {
            "type": "string"
          },
          "requestDate": {
            "type": "string",
            "format": "date"
          },
          "employeeLocation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "employeeType": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          }
        }
      },
      "2455": {
        "type": "object",
        "properties": {
          "requestId": {
            "type": "string"
          },
          "employee": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "allocationId": {
            "type": "integer"
          },
          "allocationPercent": {
            "type": "integer"
          },
          "project": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "practice": {
            "type": "object",
            "properties": {
              "name": {
                "type": "integer"
              },
              "id": {
                "type": "string"
              }
            }
          },
          "projectEndDate": {
            "type": "string",
            "format": "date"
          },
          "allocationEndDate": {
            "type": "string",
            "format": "date"
          },
          "projectedReleaseDate": {
            "type": "string",
            "format": "date"
          },
          "desiredReleaseDate": {
            "type": "string",
            "format": "date"
          },
          "otherReason": {
            "type": "string"
          },
          "releasedReason": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "requestor": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "requestDate": {
            "type": "string"
          },
          "employeeType": {
            "type": "object",
            "properties": {
              "id": {
                "type": "integer"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "employeeLocation": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "allocationUUID": {
            "type": "string"
          }
        },
        "required": [
          "requestId",
          "employee",
          "allocationId",
          "allocationPercent",
          "project",
          "practice",
          "projectEndDate",
          "allocationEndDate",
          "projectedReleaseDate",
          "desiredReleaseDate",
          "otherReason",
          "releasedReason",
          "requestor",
          "requestDate",
          "employeeType",
          "employeeLocation",
          "allocationUUID"
        ]
      },
      "2456": {
        "type": "object",
        "properties": {
          "ReleaseId": {
            "type": "string"
          }
        }
      },
      "2457": {
        "type": "object",
        "properties": {
          "sfdcCustId": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "fileType": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "fileUrl": {
            "type": "string"
          }
        }
      },
      "2478": {
        "type": "object",
        "properties": {
          "nsFormId": {
            "type": "string"
          }
        }
      },
      "2481": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          },
          "RequestData": {
            "type": "string"
          }
        }
      },
      "2507": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Opportunity": {
                  "type": "object",
                  "properties": {
                    "attributes": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      }
                    },
                    "Id": {
                      "type": "string"
                    },
                    "Name": {
                      "type": "string"
                    },
                    "Opportunity_Start_Date__c": {
                      "type": "string"
                    },
                    "AccountId": {
                      "type": "string"
                    },
                    "Amount": {
                      "type": "integer"
                    },
                    "Project_Location__c": {
                      "type": "string"
                    },
                    "Work_Location__c": {
                      "type": "string"
                    },
                    "SOW_Status__c": {
                      "type": "string"
                    },
                    "Delivery_Model__c": {
                      "type": "string"
                    },
                    "Billing_Type__c": {
                      "type": "string"
                    },
                    "SOW_Start_Date__c": {
                      "type": "string"
                    },
                    "SOW_End_Date__c": {
                      "type": "string"
                    },
                    "SOW_Currency__c": {
                      "type": "string"
                    },
                    "Item__c": {
                      "type": "string"
                    },
                    "Is_PO_Required__c": {
                      "type": "boolean"
                    },
                    "SOW_Amount__c": {
                      "type": "integer"
                    },
                    "Account_Subsidiary__c": {
                      "type": "string"
                    },
                    "Opportunity_ID__c": {
                      "type": "string"
                    },
                    "Child_Opportunity__c": {
                      "type": "string"
                    },
                    "Account": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "Id": {
                          "type": "string"
                        },
                        "Name": {
                          "type": "string"
                        },
                        "Account_ID__c": {
                          "type": "string"
                        }
                      }
                    },
                    "Child_Opportunity__r": {
                      "type": "object",
                      "properties": {
                        "attributes": {
                          "type": "object",
                          "properties": {
                            "type": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "Id": {
                          "type": "string"
                        },
                        "Project_Id__c": {
                          "type": "string"
                        }
                      }
                    },
                    "Project_Id__c": {
                      "type": "string"
                    }
                  },
                  "required": [
                    "attributes",
                    "Id",
                    "Name",
                    "Opportunity_Start_Date__c",
                    "AccountId",
                    "Amount",
                    "Project_Location__c",
                    "Work_Location__c",
                    "SOW_Status__c",
                    "Delivery_Model__c",
                    "Billing_Type__c",
                    "SOW_Start_Date__c",
                    "SOW_End_Date__c",
                    "SOW_Currency__c",
                    "Item__c",
                    "Is_PO_Required__c",
                    "SOW_Amount__c",
                    "Account_Subsidiary__c",
                    "Opportunity_ID__c",
                    "Child_Opportunity__c",
                    "Account",
                    "Child_Opportunity__r",
                    "Project_Id__c"
                  ]
                }
              }
            }
          }
        }
      },
      "2510": {
        "type": "object",
        "properties": {
          "ProjectId": {
            "type": "string"
          },
          "Including": {
            "type": "string"
          }
        }
      },
      "2516": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Market_Vertical": {
                "type": "string"
              },
              "Market_Sub_Vertical": {
                "type": "string"
              },
              "Market_Micro_Vertical": {
                "type": "string"
              },
              "Investor_Vertical": {
                "type": "string"
              },
              "Delivery_Sub_Vertical": {
                "type": "string"
              },
              "Category": {
                "type": "string"
              },
              "AccountID": {
                "type": "string"
              },
              "Account_Region": {
                "type": "string"
              },
              "Account_Owner_Email": {
                "type": "string"
              },
              "Account_Name": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "Market_Vertical",
          "Market_Sub_Vertical",
          "Market_Micro_Vertical",
          "Investor_Vertical",
          "Delivery_Sub_Vertical",
          "Category",
          "AccountID",
          "Account_Region",
          "Account_Owner_Email",
          "Account_Name"
        ]
      },
      "2523": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          }
        }
      },
      "2524": {
        "type": "object",
        "properties": {
          "Date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "2529": {
        "type": "object",
        "properties": {
          "RequestType": {
            "type": "string"
          }
        }
      },
      "2532": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "integer"
          },
          "Key": {
            "type": "integer"
          }
        }
      },
      "2785": {
        "type": "object",
        "properties": {
          "Employee": {
            "type": "integer"
          },
          "Hire_Date": {
            "type": "integer",
            "format": "date"
          },
          "Practice": {
            "type": "integer"
          },
          "Subsidiary": {
            "type": "integer"
          },
          "Employee_Type": {
            "type": "string"
          },
          "Employee_Level": {
            "type": "string"
          },
          "Inactive_Reason": {
            "type": "string"
          },
          "Last_Allocated_Project": {
            "type": "string"
          },
          "Last_Allocation_Start_Date": {
            "type": "string"
          },
          "Last_Allocation_End_Date": {
            "type": "string"
          },
          "Last_Allocation_percentage": {
            "type": "string"
          },
          "Last_Allocation_Record": {
            "type": "string"
          },
          "Customer": {
            "type": "string"
          },
          "Customer_subsidiary": {
            "type": "string"
          },
          "New_Allocated_Project": {
            "type": "string"
          },
          "New_Allocated_Start_Date": {
            "type": "string"
          },
          "New_Allocated_End_Date": {
            "type": "string"
          },
          "New_Allocation_percentage": {
            "type": "string"
          },
          "New_Allocation_RecordId": {
            "type": "string"
          }
        },
        "required": [
          "Employee",
          "Hire_Date",
          "Practice",
          "Subsidiary",
          "Employee_Type",
          "Employee_Level",
          "Inactive_Reason",
          "Last_Allocated_Project",
          "Last_Allocation_Start_Date",
          "Last_Allocation_End_Date",
          "Last_Allocation_percentage",
          "Last_Allocation_Record",
          "Customer",
          "Customer_subsidiary",
          "New_Allocated_Project",
          "New_Allocated_Start_Date",
          "New_Allocated_End_Date",
          "New_Allocation_percentage",
          "New_Allocation_RecordId"
        ]
      },
      "3118": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string"
          },
          "data": {
            "type": "string"
          }
        }
      },
      "ProjectAllocationRequest_1": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Market_Vertical": {
                  "type": "string"
                },
                "Market_Sub_Vertical": {
                  "type": "string"
                },
                "Market_Micro_Vertical": {
                  "type": "string"
                },
                "Investor_Vertical": {
                  "type": "string"
                },
                "Delivery_Sub_Vertical": {
                  "type": "string"
                },
                "Category": {
                  "type": "string"
                },
                "AccountID": {
                  "type": "string"
                },
                "Account_Region": {
                  "type": "string"
                },
                "Account_Owner_Email": {
                  "type": "string"
                },
                "Account_Name": {
                  "type": "string"
                }
              }
            },
            "required": [
              "RequestType",
              "Data"
            ]
          }
        }
      },
      "1232_Response": {
        "type": "object",
        "properties": {
          "count": {
            "type": "object",
            "properties": {
              "newJoineeCount": {
                "type": "integer"
              },
              "pendingTimesheetCount": {
                "type": "integer"
              },
              "rejectedTimesheetCount": {
                "type": "integer"
              },
              "rejectedExpenseCount": {
                "type": "integer"
              },
              "timesheetApprovalCount": {
                "type": "integer"
              },
              "expenseApprovalCount": {
                "type": "integer"
              },
              "travelApprovalCount": {
                "type": "integer"
              },
              "prApprovalCount": {
                "type": "integer"
              }
            }
          },
          "approver": {
            "type": "object",
            "properties": {
              "isTimeSheetApprover": {
                "type": "boolean"
              },
              "isExpenseApprover": {
                "type": "boolean"
              },
              "isTravelApprover": {
                "type": "boolean"
              },
              "isPRApprover": {
                "type": "boolean"
              }
            },
            "required": [
              "isTimeSheetApprover",
              "isExpenseApprover",
              "isTravelApprover",
              "isPRApprover"
            ]
          }
        },
        "required": [
          "count",
          "approver"
        ]
      },
      "1791_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Revenue": {
                "type": "array",
                "items": {}
              },
              "Discount": {
                "type": "array",
                "items": {}
              }
            },
            "required": [
              "Revenue",
              "Discount"
            ]
          }
        },
        "required": [
          "Status",
          "Data"
        ]
      },
      "ProjectAllocationResponse201": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 201
          },
          "Message": {
            "type": "string",
            "example": "Record has been created successfully"
          },
          "internal_id": {
            "type": "integer",
            "example": 123
          },
          "Project_Id": {
            "type": "string",
            "example": "ABCD"
          }
        }
      },
      "ProjectAllocationResponse201_1": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "internal_id": {
                "type": "integer"
              },
              "Project_Id": {
                "type": "string"
              }
            },
            "required": [
              "status",
              "message",
              "internal_id",
              "Project_Id"
            ]
          }
        }
      },
      "1643_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          }
        }
      },
      "2008_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Body": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Employee": {
                      "type": "string"
                    },
                    "ExpID": {
                      "type": "string"
                    },
                    "Approver": {
                      "type": "string"
                    },
                    "Subsidiary": {
                      "type": "string"
                    },
                    "Status": {
                      "type": "string"
                    },
                    "Purpose": {
                      "type": "string"
                    },
                    "TotalAmt": {
                      "type": "string"
                    },
                    "InternalId": {
                      "type": "string"
                    }
                  }
                }
              },
              "Line": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "RefNo": {
                      "type": "string"
                    },
                    "Category": {
                      "type": "string"
                    },
                    "Currency": {
                      "type": "string"
                    },
                    "Memo": {
                      "type": "string"
                    },
                    "Billable": {
                      "type": "boolean"
                    },
                    "Date": {
                      "type": "string",
                      "format": "date"
                    },
                    "Amount": {
                      "type": "string"
                    },
                    "Project": {
                      "type": "string"
                    },
                    "Project_Display": {
                      "type": "string"
                    },
                    "imgData": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "1891_Response": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "example": 201
          },
          "Message": {
            "type": "string",
            "example": "Record has been created successfully"
          },
          "internal_id": {
            "type": "integer",
            "example": 123
          },
          "Project_Id": {
            "type": "string",
            "example": "ABCD"
          }
        }
      },
      "2020_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {}
          }
        },
        "required": [
          "Status",
          "Data"
        ]
      },
      "2018_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "TimeSheetDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Body": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "TimeSheetID": {
                              "type": "string"
                            },
                            "Employee": {
                              "type": "string"
                            },
                            "timesheetApprover": {
                              "type": "string"
                            },
                            "HireDate": {
                              "type": "string"
                            },
                            "TSApprover": {
                              "type": "string"
                            },
                            "WeekStartDate": {
                              "type": "string"
                            },
                            "WeekEndDate": {
                              "type": "string"
                            },
                            "TotalHours": {
                              "type": "string"
                            },
                            "Status": {
                              "type": "string"
                            },
                            "TimeSheetBlock": {
                              "type": "boolean"
                            },
                            "TaskHoliday": {
                              "type": "string"
                            },
                            "TaskLeave": {
                              "type": "string"
                            },
                            "TaskOT": {
                              "type": "string"
                            },
                            "ServiceItemHoliday": {
                              "type": "string"
                            },
                            "ServiceItemLeave": {
                              "type": "string"
                            },
                            "ServiceItemOT": {
                              "type": "string"
                            },
                            "DayLimit": {
                              "type": "integer"
                            },
                            "WeekLimit": {
                              "type": "integer"
                            }
                          }
                        }
                      },
                      "Lines": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "ServiceItem": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "Task": {
                                    "type": "string"
                                  },
                                  "Date": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "Days": {
                                    "type": "string"
                                  },
                                  "DayNo": {
                                    "type": "integer"
                                  },
                                  "Projects": {
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "Date": {
                                          "type": "string",
                                          "format": "date"
                                        },
                                        "Project": {
                                          "type": "string"
                                        },
                                        "Task": {
                                          "type": "string"
                                        },
                                        "ServiceItem": {
                                          "type": "string"
                                        },
                                        "Hrs": {
                                          "type": "string"
                                        },
                                        "DayLimit": {
                                          "type": "string"
                                        },
                                        "WeekLimit": {
                                          "type": "string"
                                        },
                                        "TaskPro": {
                                          "type": "string"
                                        },
                                        "ServiceItemPro": {
                                          "type": "string"
                                        },
                                        "HolidayCheck": {
                                          "type": "boolean"
                                        },
                                        "LeaveCheck": {
                                          "type": "boolean"
                                        },
                                        "OTHrs": {
                                          "type": "integer"
                                        },
                                        "Days": {
                                          "type": "string"
                                        },
                                        "isOtEligible": {
                                          "type": "boolean"
                                        },
                                        "CustomerName": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "2007_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          }
        }
      },
      "2013_Response": {
        "type": "object",
        "properties": {
          "InternalId": {
            "type": "string"
          },
          "EmployeeName": {
            "type": "string"
          },
          "Purpose": {
            "type": "string"
          },
          "TravelId": {
            "type": "string"
          },
          "DepartureDate": {
            "type": "string",
            "format": "date"
          },
          "Type": {
            "type": "string"
          },
          "Project": {
            "type": "string"
          },
          "Checked": {
            "type": "boolean"
          }
        }
      },
      "2021_Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "CurrentDate": {
              "type": "string",
              "format": "date"
            },
            "ProjectManagerFlag": {
              "type": "boolean"
            },
            "ReportingManager": {
              "type": "boolean"
            },
            "RequestJSON": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "PeerBirthday": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "Value": {
                          "type": "integer"
                        },
                        "Date": {
                          "type": "string",
                          "format": "date"
                        },
                        "Month": {
                          "type": "string"
                        },
                        "BirthDate": {
                          "type": "integer",
                          "format": "date"
                        },
                        "Email": {
                          "type": "string"
                        },
                        "Name": {
                          "type": "string"
                        },
                        "Phone": {
                          "type": "string"
                        },
                        "IN": {
                          "type": "string"
                        },
                        "ImageURL": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "CurrentDate",
          "ProjectManagerFlag",
          "ReportingManager",
          "RequestJSON"
        ]
      },
      "2083_Response": {
        "type": "object",
        "properties": {
          "CurrentDate": {
            "type": "string",
            "format": "date"
          },
          "ProjectManagerFlag": {
            "type": "boolean"
          },
          "ReportingManager": {
            "type": "boolean"
          },
          "RequestJSON": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "HolidayList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Holiday_Desc": {
                        "type": "string"
                      },
                      "Holiday_Date": {
                        "type": "integer",
                        "format": "date"
                      },
                      "IN": {
                        "type": "string"
                      },
                      "Holiday_Month": {
                        "type": "string"
                      },
                      "Holiday_Year": {
                        "type": "integer"
                      },
                      "HolidayDate": {
                        "type": "string",
                        "format": "date"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "required": [
          "CurrentDate",
          "ProjectManagerFlag",
          "ReportingManager",
          "RequestJSON"
        ]
      },
      "2444_Response": {
        "type": "object",
        "properties": {
          "Internal ID": {
            "type": "integer"
          },
          "Record Name": {
            "type": "string"
          }
        },
        "required": [
          "EmailId"
        ]
      },
      "2445_Response": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          }
        }
      },
      "2446_Response": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          }
        }
      },
      "2447_Response": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          }
        }
      },
      "2449_Response": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          }
        }
      },
      "2450_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "array",
            "items": {}
          }
        }
      },
      "2451_Response": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string"
          },
          "internalid": {
            "type": "integer"
          },
          "Allocation Id": {
            "type": "string"
          }
        }
      },
      "2452_Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          },
          "internal_id": {
            "type": "integer"
          },
          "caseNumber": {
            "type": "string"
          },
          "Request_Id": {
            "type": "string"
          },
          "mileStone": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string"
              },
              "error": {
                "type": "string"
              },
              "fuelId": {
                "type": "string"
              },
              "id": {
                "type": "integer"
              }
            }
          }
        }
      },
      "2453_Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "2454_Response": {
        "type": "object",
        "properties": {
          "internal_id": {
            "type": "string"
          },
          "RequestId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "2455_Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "2516_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "AccountID": {
                  "type": "string"
                },
                "NetsuiteCustomerID": {
                  "type": "string"
                },
                "Subsidiary": {
                  "type": "string"
                }
              }
            }
          },
          "Status": {
            "type": "string"
          }
        }
      },
      "2532_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "Data": {
            "type": "object"
          }
        }
      },
      "2261_Response": {
        "type": "object",
        "properties": {
          "Internal Id": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "2262_Response": {
        "type": "object",
        "properties": {
          "Internal ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "Account_type": {
            "type": "string"
          }
        }
      },
      "2263_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Internal_ID": {
                "type": "string"
              },
              "Customer_ID": {
                "type": "string"
              },
              "Project_ID": {
                "type": "string"
              },
              "Project_Name": {
                "type": "string"
              },
              "Project_Manager": {
                "type": "string"
              },
              "Practice": {
                "type": "string"
              },
              "Project_Service": {
                "type": "string"
              },
              "Project_Manager_ID": {
                "type": "string"
              },
              "Delivery_Manager_ID": {
                "type": "string"
              },
              "Billing_Type": {
                "type": "string"
              },
              "Project_Type": {
                "type": "string"
              },
              "Project_Allocation_Category": {
                "type": "string"
              },
              "Start_Date": {
                "type": "string",
                "format": "date"
              },
              "End_Date": {
                "type": "string",
                "format": "date"
              },
              "Project_Manager_Employee_ID": {
                "type": "string"
              },
              "Delivery_Manager_Employee_ID": {
                "type": "string"
              },
              "Project_region": {
                "type": "string"
              },
              "Project_category": {
                "type": "string"
              },
              "Client_Partner": {
                "type": "string"
              },
              "Client_Partner_Employee_ID": {
                "type": "string"
              },
              "Project_Status": {
                "type": "string"
              },
              "Project_Sold_Margin": {
                "type": "string"
              },
              "Customer_Sold_Margin": {
                "type": "string"
              }
            }
          }
        },
        "required": [
          "RequestType",
          "Data",
          "Internal_ID",
          "Customer_ID",
          "Project_ID",
          "Project_Name",
          "Project_Manager",
          "Practice",
          "Project_Service",
          "Project_Manager_ID",
          "Delivery_Manager_ID",
          "Billing_Type",
          "Project_Type",
          "Project_Allocation_Category",
          "Start_Date",
          "End_Date",
          "Project_Manager_Employee_ID",
          "Delivery_Manager_Employee_ID",
          "Project_region",
          "Project_category",
          "Client_Partner",
          "Client_Partner_Employee_ID",
          "Project_Status",
          "Project_Sold_Margin",
          "Customer_Sold_Margin"
        ]
      },
      "2264_Response": {
        "type": "object",
        "properties": {
          "Internal ID": {
            "type": "string"
          },
          "Vendor_ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "2265_Response": {
        "type": "object",
        "properties": {
          "Internal ID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Region_Head": {
            "type": "string"
          },
          "Region_Head_Employee_Id": {
            "type": "string"
          }
        }
      },
      "2266_Response": {
        "type": "object",
        "properties": {
          "Internal ID": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          },
          "Parent_Practice": {
            "type": "string"
          },
          "Parent_Practice_Inetrnal_Id": {
            "type": "string"
          },
          "Practice_Head": {
            "type": "string"
          },
          "Practice_Head_Employee_Id": {
            "type": "string"
          }
        }
      },
      "2267_Response": {
        "type": "object",
        "properties": {
          "Internal ID": {
            "type": "string"
          },
          "Customer_ID": {
            "type": "string"
          },
          "Customer_Name": {
            "type": "string"
          },
          "Client_Vertical": {
            "type": "string"
          },
          "Client_Category": {
            "type": "string"
          },
          "Region": {
            "type": "string"
          },
          "Territory": {
            "type": "string"
          },
          "Account_Manager": {
            "type": "string"
          },
          "Account_Manager_Employee_ID": {
            "type": "string"
          },
          "Account_Delivery_owner": {
            "type": "string"
          },
          "Account_Delivery_Owner_Employee_Id": {
            "type": "string"
          }
        },
        "required": [
          "Customer_ID",
          "Customer_Name",
          "Client_Vertical",
          "Client_Category",
          "Region",
          "Territory",
          "Account_Manager",
          "Account_Manager_Employee_ID",
          "Account_Delivery_owner",
          "Account_Delivery_Owner_Employee_Id"
        ]
      },
      "2268_Response": {
        "type": "object",
        "properties": {
          "Internal Id": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "2270_Response": {
        "type": "object",
        "properties": {
          "Internal_ID": {
            "type": "string"
          },
          "Resource": {
            "type": "string"
          },
          "Employee_Id": {
            "type": "string"
          },
          "Employee_Name": {
            "type": "string"
          },
          "Employee_Inactive": {
            "type": "boolean"
          },
          "Employee_Practice": {
            "type": "string"
          },
          "Employee_Subpractice": {
            "type": "string"
          },
          "Employee_Parent_Practice": {
            "type": "string"
          },
          "Salaried/Hourly": {
            "type": "string"
          },
          "Project_ID": {
            "type": "string"
          },
          "Project_Name": {
            "type": "string"
          },
          "Poject_Internal_ID": {
            "type": "string"
          },
          "Customer_ID": {
            "type": "string"
          },
          "Customer_Name": {
            "type": "string"
          },
          "Customer": {
            "type": "string"
          },
          "Resource Billable": {
            "type": "boolean"
          },
          "Start_Date": {
            "type": "string",
            "format": "date"
          },
          "End_Date": {
            "type": "string",
            "format": "date"
          },
          "Number_Of_Hours": {
            "type": "string"
          },
          "Percentage_of_Time": {
            "type": "string"
          },
          "Billing_Start_Date": {
            "type": "string",
            "format": "date"
          },
          "Billing_End_Date": {
            "type": "string",
            "format": "date"
          },
          "Bill_Rate": {
            "type": "string"
          },
          "OT_Rate": {
            "type": "string"
          },
          "Work Location": {
            "type": "string"
          },
          "Onsite/Offsite": {
            "type": "string"
          },
          "Customer_Vertical": {
            "type": "string"
          },
          "Executing_Practice": {
            "type": "string"
          },
          "Project_Services": {
            "type": "string"
          },
          "Project_Manager": {
            "type": "string"
          },
          "Delivery_Manager": {
            "type": "string"
          },
          "Reporting Manager": {
            "type": "string"
          },
          "Time_Approver": {
            "type": "string"
          },
          "Email": {
            "type": "string"
          },
          "Alt. Email": {
            "type": "string"
          },
          "Billing_Type": {
            "type": "string"
          },
          "Project_Type": {
            "type": "string"
          },
          "ST_Pay_Rate": {
            "type": "string"
          },
          "OT_Pay_Rate": {
            "type": "string"
          },
          "Subsidiary": {
            "type": "string"
          },
          "Person_Type": {
            "type": "string"
          },
          "Employee_Type": {
            "type": "string"
          },
          "Employee_Status": {
            "type": "string"
          },
          "Job_Title": {
            "type": "string"
          },
          "Actual_Hire_Date": {
            "type": "string",
            "format": "date"
          },
          "Function": {
            "type": "string"
          },
          "Territory": {
            "type": "string"
          },
          "Project_Allocation_Category": {
            "type": "string"
          },
          "Employee_Location": {
            "type": "string"
          },
          "Last_Working_Date": {
            "type": "string",
            "format": "date"
          },
          "Employment_Category": {
            "type": "string"
          },
          "Project_Start_Date": {
            "type": "string",
            "format": "date"
          },
          "Project_End_Date": {
            "type": "string",
            "format": "date"
          }
        }
      },
      "2271_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Internal_ID": {
                "type": "string"
              },
              "Name": {
                "type": "string"
              },
              "Employee_ID": {
                "type": "string"
              },
              "Employee_Name": {
                "type": "string"
              },
              "Middle_Name": {
                "type": "string"
              },
              "Last_Name": {
                "type": "string"
              },
              "Employee_Inactive": {
                "type": "boolean"
              },
              "Employee_Practice": {
                "type": "string"
              },
              "Employee_Parent_practice": {
                "type": "string"
              },
              "Salaried_Hourly": {
                "type": "string"
              },
              "Reporting_Manager": {
                "type": "string"
              },
              "Time_Approver": {
                "type": "string"
              },
              "Email": {
                "type": "string"
              },
              "Alt_Email": {
                "type": "string"
              },
              "Subsidiary": {
                "type": "string"
              },
              "Person_Type": {
                "type": "string"
              },
              "Employee_Type": {
                "type": "string"
              },
              "Employee_Status": {
                "type": "string"
              },
              "Job_Title": {
                "type": "string"
              },
              "Actual_Hire_Date": {
                "type": "string",
                "format": "date"
              },
              "Function": {
                "type": "string"
              },
              "Employee_Location": {
                "type": "string"
              },
              "Last_Working_Date": {
                "type": "string",
                "format": "date"
              },
              "Employment_Category": {
                "type": "string"
              }
            },
            "required": [
              "RequestType",
              "Data",
              "Internal_ID",
              "Name",
              "Employee_ID",
              "Employee_Name",
              "Middle_Name",
              "Last_Name",
              "Employee_Inactive",
              "Employee_Practice",
              "Employee_Parent_practice",
              "Salaried_Hourly",
              "Reporting_Manager",
              "Time_Approver",
              "Email",
              "Alt_Email",
              "Subsidiary",
              "Person_Type",
              "Employee_Type",
              "Employee_Status",
              "Job_Title",
              "Actual_Hire_Date",
              "Function",
              "Employee_Location",
              "Last_Working_Date",
              "Employment_Category"
            ]
          }
        }
      },
      "2272_Response": {
        "type": "object",
        "properties": {
          "Internal Id": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "2273_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Internal_ID": {
                "type": "string"
              },
              "Project_ID": {
                "type": "string"
              },
              "Project_Name": {
                "type": "string"
              },
              "Customer_Name": {
                "type": "string"
              },
              "Client_Partner": {
                "type": "string"
              },
              "Customer_Territory": {
                "type": "string"
              },
              "Customer_Subsidiary": {
                "type": "string"
              },
              "Project_Status": {
                "type": "string"
              },
              "Project_Type": {
                "type": "string"
              },
              "SOW_Date": {
                "type": "string",
                "format": "date"
              },
              "Comments": {
                "type": "string"
              },
              "Delivery_Model": {
                "type": "string"
              },
              "Billing_Type": {
                "type": "string"
              },
              "Is_T&M_Monthly": {
                "type": "boolean"
              },
              "Billing_Schedule": {
                "type": "string"
              },
              "Start_Date": {
                "type": "string",
                "format": "date"
              }
            },
            "required": [
              "RequestType",
              "Data",
              "Internal_ID",
              "Project_ID",
              "Project_Name",
              "Customer_Name",
              "Client_Partner",
              "Customer_Territory",
              "Customer_Subsidiary",
              "Project_Status",
              "Project_Type",
              "SOW_Date",
              "Comments",
              "Delivery_Model",
              "Billing_Type",
              "Is_T&M_Monthly",
              "Billing_Schedule",
              "Start_Date"
            ]
          }
        }
      },
      "2275_Response": {
        "type": "object",
        "properties": {
          "Internal Id": {
            "type": "integer"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "2287_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Date": {
                "type": "string"
              },
              "Employee": {
                "type": "string"
              },
              "Employee_First_Name": {
                "type": "string"
              },
              "Employee_Middle_Name": {
                "type": "string"
              },
              "Employee_Last_Name": {
                "type": "string"
              },
              "Employee_Id": {
                "type": "string"
              },
              "Employee_Inc_Id": {
                "type": "string"
              },
              "Customer": {
                "type": "string"
              },
              "Customer_Subsidiary": {
                "type": "string"
              },
              "Project_Id": {
                "type": "string"
              },
              "Project_ID": {
                "type": "string"
              },
              "Project_Name": {
                "type": "string"
              },
              "Task": {
                "type": "string"
              },
              "Item": {
                "type": "string"
              },
              "Duration": {
                "type": "string"
              },
              "Billable": {
                "type": "boolean"
              },
              "Location": {
                "type": "string"
              },
              "Rate": {
                "type": "string"
              },
              "Employee_Subsidiary": {
                "type": "string"
              },
              "End_Customer": {
                "type": "string"
              },
              "Billing_Type": {
                "type": "string"
              },
              "Project_Type": {
                "type": "string"
              },
              "Approval_Status": {
                "type": "string"
              }
            },
            "required": [
              "RequestType",
              "Data",
              "Date",
              "Employee",
              "Employee_First_Name",
              "Employee_Middle_Name",
              "Employee_Last_Name",
              "Employee_Id",
              "Employee_Inc_Id",
              "Customer",
              "Customer_Subsidiary",
              "Project_Id",
              "Project_ID",
              "Project_Name",
              "Task",
              "Item",
              "Duration",
              "Billable",
              "Location",
              "Rate",
              "Employee_Subsidiary",
              "End_Customer",
              "Billing_Type",
              "Project_Type",
              "Approval_Status"
            ]
          }
        }
      },
      "Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Account": {
                "type": "string"
              },
              "Type": {
                "type": "string"
              },
              "Date": {
                "type": "string"
              },
              "Document_Number": {
                "type": "string"
              },
              "Name": {
                "type": "string"
              },
              "Amount": {
                "type": "string"
              },
              "Currency": {
                "type": "string"
              },
              "Billing_From": {
                "type": "string"
              },
              "Billing_To": {
                "type": "string"
              },
              "Customer": {
                "type": "string"
              },
              "Project_ID": {
                "type": "string"
              },
              "Proj_Name": {
                "type": "string"
              },
              "Employee_ID": {
                "type": "string"
              },
              "Emp_Name": {
                "type": "string"
              },
              "Parent_Executing_Practice": {
                "type": "string"
              },
              "Practice": {
                "type": "string"
              },
              "Parent_Practice": {
                "type": "string"
              },
              "Territory": {
                "type": "string"
              },
              "Location": {
                "type": "string"
              },
              "Memo_main": {
                "type": "string"
              },
              "Memo": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              },
              "Item": {
                "type": "string"
              },
              "Units": {
                "type": "string"
              },
              "Employee_type": {
                "type": "string"
              },
              "Person_type": {
                "type": "string"
              },
              "Onsite_Offsite": {
                "type": "string"
              },
              "Billing_type": {
                "type": "string"
              },
              "Proj_Category": {
                "type": "string"
              },
              "Subsidiary": {
                "type": "string"
              },
              "Project_Region": {
                "type": "string"
              },
              "Period": {
                "type": "string"
              }
            },
            "required": [
              "RequestType Data Account Type Date Document_Number Name Amount Currency Billing_From Billing_To Customer Project_ID Proj_Name Employee_ID Emp_Name Parent_Executing_Practice Practice Parent_Practice Territory Location Memo_main Memo Description Item Units Employee_type Person_type Onsite_Offsite Billing_type Proj_Category Subsidiary Project_Region Period"
            ]
          }
        }
      },
      "2280_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Account": {
                "type": "string"
              },
              "Name": {
                "type": "string"
              },
              "Name_2": {
                "type": "string"
              },
              "Type": {
                "type": "string"
              },
              "Date": {
                "type": "string"
              },
              "Document_Number": {
                "type": "string"
              },
              "Amount": {
                "type": "string"
              },
              "Currency": {
                "type": "string"
              },
              "Billing_From": {
                "type": "string"
              },
              "Billing_To": {
                "type": "string"
              },
              "Customer": {
                "type": "string"
              },
              "Project_ID": {
                "type": "string"
              },
              "Proj_Name": {
                "type": "string"
              },
              "Employee_ID": {
                "type": "string"
              },
              "Emp_Name": {
                "type": "string"
              },
              "Parent_Executing_Practice": {
                "type": "string"
              },
              "Practice": {
                "type": "string"
              },
              "Parent_Practice": {
                "type": "string"
              },
              "Territory": {
                "type": "string"
              },
              "Location": {
                "type": "string"
              },
              "Memo_main": {
                "type": "string"
              },
              "Memo": {
                "type": "string"
              },
              "Description": {
                "type": "string"
              },
              "Item": {
                "type": "string"
              },
              "Units": {
                "type": "string"
              },
              "Employee_type": {
                "type": "string"
              },
              "Person_type": {
                "type": "string"
              },
              "Onsite_Offsite": {
                "type": "string"
              },
              "Billing_type": {
                "type": "string"
              },
              "Proj_Category": {
                "type": "string"
              },
              "Subsidiary": {
                "type": "string"
              },
              "Project_Region": {
                "type": "string"
              },
              "Period": {
                "type": "string"
              }
            },
            "required": [
              "RequestType",
              "Data",
              "Account",
              "Type",
              "Date",
              "Document_Number",
              "Amount",
              "Currency",
              "Billing_From",
              "Billing_To",
              "Customer",
              "Project_ID",
              "Proj_Name",
              "Employee_ID",
              "Emp_Name",
              "Parent_Executing_Practice",
              "Practice",
              "Parent_Practice",
              "Territory",
              "Location",
              "Memo_main",
              "Memo",
              "Description",
              "Item",
              "Units",
              "Employee_type",
              "Person_type",
              "Onsite_Offsite",
              "Billing_type",
              "Proj_Category",
              "Subsidiary",
              "Project_Region",
              "Period"
            ]
          }
        }
      },
      "2484_Response": {
        "type": "object",
        "properties": {
          "VerticalMaster": {
            "type": "object",
            "properties": {
              "Internal_ID": {
                "type": "integer"
              },
              "Vertical_Name": {
                "type": "string"
              },
              "Vertical_Head": {
                "type": "string"
              },
              "Vertical_Type": {
                "type": "string"
              },
              "Parent Vertical": {
                "type": "string"
              },
              "Parent Vertical Id": {
                "type": "string"
              }
            }
          },
          "MicroVertical": {
            "type": "object",
            "properties": {
              "Micro_vertical_internal_id": {
                "type": "string"
              },
              "Name": {
                "type": "string"
              }
            }
          },
          "InvestorVertical": {
            "type": "object",
            "properties": {
              "Name": {
                "type": "string"
              }
            }
          }
        }
      },
      "2864_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "currentDate": {
                "type": "string",
                "format": "date"
              },
              "ReceviedData": {
                "type": "string"
              }
            }
          }
        }
      },
      "2871_Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "Status": {
                "type": "boolean"
              },
              "data": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer"
                  },
                  "EmployeeID": {
                    "type": "string"
                  },
                  "Emp_Display_Name": {
                    "type": "string"
                  },
                  "EmployeeType": {
                    "type": "string"
                  },
                  "PersonType": {
                    "type": "string"
                  },
                  "Designation": {
                    "type": "string"
                  },
                  "Role": {
                    "type": "string"
                  },
                  "FirstName": {
                    "type": "string"
                  },
                  "MiddleName": {
                    "type": "string"
                  },
                  "LastName": {
                    "type": "string"
                  },
                  "Department": {
                    "type": "string"
                  },
                  "LegalEntity": {
                    "type": "string"
                  },
                  "Employee_InActive": {
                    "type": "string"
                  },
                  "WorkEmail": {
                    "type": "string"
                  },
                  "Band": {
                    "type": "string"
                  },
                  "AttendanceTracking": {
                    "type": "string"
                  },
                  "Phone": {
                    "type": "integer"
                  },
                  "HireDate": {
                    "type": "string"
                  },
                  "TerminationDate": {
                    "type": "string"
                  },
                  "Gender": {
                    "type": "string"
                  },
                  "Hourly_Salaried": {
                    "type": "string"
                  },
                  "ManagerEmail": {
                    "type": "string"
                  },
                  "ManagerPersonNumber": {
                    "type": "string"
                  },
                  "PersonID": {
                    "type": "string"
                  },
                  "EmployerId": {
                    "type": "string"
                  },
                  "AssignmentNumber": {
                    "type": "string"
                  },
                  "ManagerDisplayName": {
                    "type": "string"
                  },
                  "BrillioLocation": {
                    "type": "string"
                  },
                  "LegalEntityFusion": {
                    "type": "string"
                  },
                  "EmployeeCategory": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "2636_Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "Status": {
                "type": "boolean"
              },
              "data": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer"
                  },
                  "EmployeeID": {
                    "type": "string"
                  },
                  "Emp_Display_Name": {
                    "type": "string"
                  },
                  "EmployeeType": {
                    "type": "string"
                  },
                  "PersonType": {
                    "type": "string"
                  },
                  "Designation": {
                    "type": "string"
                  },
                  "Role": {
                    "type": "string"
                  },
                  "FirstName": {
                    "type": "string"
                  },
                  "MiddleName": {
                    "type": "string"
                  },
                  "LastName": {
                    "type": "string"
                  },
                  "Department": {
                    "type": "string"
                  },
                  "LegalEntity": {
                    "type": "string"
                  },
                  "Employee_InActive": {
                    "type": "string"
                  },
                  "WorkEmail": {
                    "type": "string"
                  },
                  "Band": {
                    "type": "string"
                  },
                  "AttendanceTracking": {
                    "type": "string"
                  },
                  "Phone": {
                    "type": "integer"
                  },
                  "HireDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "TerminationDate": {
                    "type": "string",
                    "format": "date"
                  },
                  "Gender": {
                    "type": "string"
                  },
                  "Hourly_Salaried": {
                    "type": "string"
                  },
                  "ManagerEmail": {
                    "type": "string"
                  },
                  "ManagerPersonNumber": {
                    "type": "string"
                  },
                  "PersonID": {
                    "type": "string"
                  },
                  "EmployerId": {
                    "type": "string"
                  },
                  "AssignmentNumber": {
                    "type": "string"
                  },
                  "ManagerDisplayName": {
                    "type": "string"
                  },
                  "BrillioLocation": {
                    "type": "string"
                  },
                  "LegalEntityFusion": {
                    "type": "string"
                  },
                  "EmployeeCategory": {
                    "type": "string"
                  },
                  "Subpracticehead": {
                    "type": "string"
                  },
                  "ParentPracticeId": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "2269_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Internal_ID": {
                "type": "string"
              },
              "Year": {
                "type": "string"
              },
              "USD_INR_Revenue_Rate": {
                "type": "string"
              },
              "USD_INR_Cost_Rate": {
                "type": "string"
              },
              "USD_GBP": {
                "type": "string"
              },
              "USD_EUR": {
                "type": "string"
              },
              "USD_AUD": {
                "type": "string"
              },
              "USD_CAD": {
                "type": "string"
              },
              "USD_RON": {
                "type": "string"
              }
            }
          }
        }
      },
      "2274_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Internal_ID": {
                "type": "string"
              },
              "Name": {
                "type": "string"
              },
              "Date": {
                "type": "string",
                "format": "date"
              },
              "Location": {
                "type": "string"
              }
            }
          }
        }
      },
      "2339_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Employee_Id": {
                "type": "string"
              },
              "Regions": {
                "type": "string"
              },
              "Customer": {
                "type": "string"
              },
              "Ebita": {
                "type": "boolean"
              },
              "Vertical": {
                "type": "string"
              },
              "Practice": {
                "type": "string"
              },
              "Include_All_Practice": {
                "type": "boolean"
              },
              "Include_All_Region": {
                "type": "boolean"
              },
              "Include_All_Customer": {
                "type": "boolean"
              },
              "Include_All_vertical": {
                "type": "boolean"
              }
            }
          }
        }
      },
      "2528_Response_1": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Status": {
                "type": "string"
              },
              "TimesheetId": {
                "type": "string"
              },
              "EmployeeName": {
                "type": "string"
              },
              "WeekStartDate": {
                "type": "string"
              },
              "WeekEndDate": {
                "type": "string"
              },
              "TotalApprovable": {
                "type": "string"
              },
              "Project": {
                "type": "string"
              }
            }
          }
        }
      },
      "2528_Response_2": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Id": {
                "type": "string"
              },
              "Message": {
                "type": "string",
                "example": "TS Updated With Approved Status"
              }
            }
          }
        }
      },
      "2528_Response_3": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "Id": {
                "type": "string"
              },
              "Message": {
                "type": "string",
                "example": "TS Updated With Rejection Status"
              }
            }
          }
        }
      },
      "2016_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "ID": {
                "type": "integer"
              },
              "Employee": {
                "type": "string"
              },
              "WeekStartDate": {
                "type": "string",
                "format": "date"
              },
              "WeekEndDate": {
                "type": "string",
                "format": "date"
              },
              "TotalHrs": {
                "type": "string"
              },
              "ApprovalStatus": {
                "type": "string"
              },
              "Approver": {
                "type": "string"
              },
              "SubmittedDate": {
                "type": "string",
                "format": "date"
              }
            }
          }
        }
      },
      "2319_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {}
          }
        }
      },
      "1842_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string",
            "example": "Success"
          }
        }
      },
      "1845_Response": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "opportunityID": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "project": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "practice": {
            "type": "string"
          },
          "revenuestatus": {
            "type": "string"
          },
          "startDate": {
            "type": "string"
          },
          "endDate": {
            "type": "string"
          },
          "stage": {
            "type": "string"
          }
        }
      },
      "2785_Response": {
        "type": "object",
        "properties": {
          "New_Allocated_Project": {
            "type": "string"
          },
          "New_Allocated_Start_Date": {
            "type": "string"
          },
          "New_Allocated_End_Date": {
            "type": "string"
          },
          "New_Allocation_RecordId": {
            "type": "string"
          },
          "New_Allocation_percentage": {
            "type": "string"
          }
        }
      },
      "1975_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          }
        }
      },
      "1844_Response": {
        "type": "object",
        "properties": {
          "dataOut": {
            "type": "object",
            "properties": {
              "allocatedresources": {
                "type": "string"
              },
              "benchresources": {
                "type": "string"
              },
              "skills": {
                "type": "array",
                "items": {}
              },
              "frfstatus": {
                "type": "string"
              },
              "trainings": {
                "type": "array",
                "items": {}
              },
              "utilization": {
                "type": "array",
                "items": {}
              },
              "visadetails": {
                "type": "array",
                "items": {}
              },
              "newjoiners": {
                "type": "array",
                "items": {}
              },
              "longleaves": {
                "type": "string"
              },
              "billable_non_billable": {
                "type": "string"
              },
              "ramp_up_ramp_down": {
                "type": "string"
              }
            }
          }
        }
      },
      "1778_Response": {
        "type": "object",
        "properties": {
          "Data": {
            "type": "object",
            "properties": {
              "employee": {
                "type": "string"
              },
              "practice": {
                "type": "string"
              },
              "visa": {
                "type": "string"
              },
              "role": {
                "type": "string"
              },
              "location": {
                "type": "string"
              },
              "customer": {
                "type": "string"
              },
              "availablefrom": {
                "type": "string"
              }
            }
          }
        }
      },
      "1780_Response": {
        "type": "object",
        "properties": {
          "empName": {
            "type": "string"
          },
          "primarySkill": {
            "type": "string"
          },
          "secondaryskill": {
            "type": "string"
          },
          "family": {
            "type": "string"
          },
          "rate": {
            "type": "string"
          },
          "startdate": {
            "type": "string",
            "format": "date"
          },
          "enddate": {
            "type": "string",
            "format": "date"
          },
          "role": {
            "type": "string"
          },
          "level": {
            "type": "string"
          },
          "percentofallocation": {
            "type": "string"
          },
          "projectAllocated": {
            "type": "string"
          },
          "practice": {
            "type": "string"
          }
        }
      },
      "1855_Response": {
        "type": "object",
        "properties": {
          "opportunityDetails": {
            "type": "string"
          },
          "fufillmentDetails": {
            "type": "string"
          },
          "revenueDetails": {
            "type": "string"
          }
        }
      },
      "1779_Response": {
        "type": "object",
        "properties": {
          "dataOut": {
            "type": "object",
            "properties": {
              "preferred": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "boolean"
                  }
                }
              },
              "visa": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "employee": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "practice": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                }
              },
              "emplevel": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "skillfamily": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                }
              },
              "primaryskill": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "role": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "location": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                }
              },
              "customer": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "integer"
                  }
                }
              },
              "availablefrom": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "project": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "projectstatus": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "mandatorySkills": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              },
              "reportingManager": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "1840_Response": {
        "type": "object",
        "properties": {
          "dataOut": {
            "type": "object",
            "properties": {
              "employeeList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "employeename": {
                      "type": "string"
                    },
                    "employeeid": {
                      "type": "integer"
                    },
                    "email": {
                      "type": "string"
                    },
                    "designation": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "2232_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "internalid": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "city": {
                "type": "string"
              },
              "state": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "locationCode": {
                "type": "string"
              },
              "inactive": {
                "type": "string"
              }
            }
          }
        }
      },
      "1852_Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object"
          }
        }
      },
      "1848_Response": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "string"
          },
          "designation": {
            "type": "string"
          },
          "skills": {
            "type": "string"
          },
          "criticality": {
            "type": "string"
          },
          "requesttype": {
            "type": "string"
          },
          "start_date": {
            "type": "string"
          },
          "end_date": {
            "type": "string"
          },
          "frfnumber": {
            "type": "string"
          },
          "frfstatus": {
            "type": "string"
          },
          "account": {
            "type": "string"
          },
          "softlockedresource": {
            "type": "string"
          },
          "externalhire": {
            "type": "string"
          }
        }
      },
      "1850_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          }
        }
      },
      "2044_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": "success"
          }
        }
      },
      "2011_Response_1": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "example": true
          },
          "Employee": {
            "type": "string"
          },
          "Currency": {
            "type": "string"
          },
          "Date": {
            "type": "string"
          },
          "Approver": {
            "type": "string"
          },
          "Subsidiary": {
            "type": "string"
          },
          "Project": {
            "type": "string"
          },
          "Billable": {
            "type": "string"
          },
          "Status": {
            "type": "string"
          },
          "StatusMsg": {
            "type": "string"
          },
          "Purpose": {
            "type": "string"
          },
          "TotalAmt": {
            "type": "string"
          }
        }
      },
      "2011_Response_2": {
        "type": "object",
        "properties": {
          "SlNo": {
            "type": "integer"
          },
          "Employee": {
            "type": "integer"
          },
          "ExpenseID": {
            "type": "integer"
          },
          "Date": {
            "type": "integer"
          },
          "Purpose": {
            "type": "integer"
          },
          "Status": {
            "type": "string"
          },
          "StatusMsg": {
            "type": "string"
          },
          "Amount": {
            "type": "string"
          },
          "Project": {
            "type": "string"
          },
          "Subsidiary": {
            "type": "string"
          },
          "Currency": {
            "type": "string"
          }
        }
      },
      "2128_Response": {
        "type": "object",
        "properties": {
          "PRNumber": {
            "type": "string"
          }
        }
      },
      "1208_Response": {
        "type": "object",
        "properties": {
          "InternalID": {
            "type": "integer"
          },
          "Resource": {
            "type": "string"
          },
          "Project": {
            "type": "string"
          },
          "ProjectBillingType": {
            "type": "string"
          },
          "AllocationStartDate": {
            "type": "string"
          },
          "AllcoationEndDate": {
            "type": "string"
          },
          "PercentOfAllocation": {
            "type": "string"
          },
          "ResourcePractice": {
            "type": "string"
          },
          "BillingStartDate": {
            "type": "string"
          },
          "BillingEndDate": {
            "type": "string"
          },
          "OnsiteOffshore": {
            "type": "string"
          }
        }
      },
      "1450_Response": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "PracticeDescription": {
            "type": "string"
          },
          "Subsidiary": {
            "type": "string"
          },
          "PracticeHead": {
            "type": "string"
          },
          "PracticeHeadEmail": {
            "type": "string"
          },
          "ParentPractice": {
            "type": "string"
          },
          "OnSitePracticeHead": {
            "type": "string"
          },
          "OnSitePracticeHeadEmail": {
            "type": "string"
          },
          "PracticeHead2": {
            "type": "string"
          },
          "PracticeHeadEmail2": {
            "type": "string"
          }
        }
      },
      "2078_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "timeStamp": {
            "type": "string"
          },
          "internalId": {
            "type": "integer"
          },
          "salaryId": {
            "type": "integer"
          },
          "salaryBasis": {
            "type": "string"
          },
          "currencyCode": {
            "type": "string"
          },
          "startDate": {
            "type": "string",
            "format": "date"
          },
          "endDate": {
            "type": "string"
          },
          "actionName": {
            "type": "string"
          },
          "legalEntityId": {
            "type": "string"
          },
          "legalEntity": {
            "type": "string"
          },
          "ctc": {
            "type": "string"
          },
          "annualCtc": {
            "type": "string"
          }
        }
      },
      "2095_Response": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "Status": {
                "type": "boolean"
              },
              "data": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "integer"
                  },
                  "EmployeeID": {
                    "type": "string"
                  },
                  "Emp_Display_Name": {
                    "type": "string"
                  },
                  "EmployeeType": {
                    "type": "string"
                  },
                  "PersonType": {
                    "type": "string"
                  },
                  "Designation": {
                    "type": "string"
                  },
                  "Role": {
                    "type": "string"
                  },
                  "FirstName": {
                    "type": "string"
                  },
                  "MiddleName": {
                    "type": "string"
                  },
                  "LastName": {
                    "type": "string"
                  },
                  "Department": {
                    "type": "string"
                  },
                  "LegalEntity": {
                    "type": "string"
                  },
                  "Employee_InActive": {
                    "type": "string"
                  },
                  "WorkEmail": {
                    "type": "string"
                  },
                  "Band": {
                    "type": "string"
                  },
                  "AttendanceTracking": {
                    "type": "string"
                  },
                  "Phone": {
                    "type": "integer"
                  },
                  "HireDate": {
                    "type": "string"
                  },
                  "LegalHireDate": {
                    "type": "string"
                  },
                  "TerminationDate": {
                    "type": "string"
                  },
                  "Gender": {
                    "type": "string"
                  },
                  "Hourly_Salaried": {
                    "type": "string"
                  },
                  "ManagerEmail": {
                    "type": "string"
                  },
                  "ManagerPersonNumber": {
                    "type": "string"
                  },
                  "PersonID": {
                    "type": "string"
                  },
                  "EmployerId": {
                    "type": "string"
                  },
                  "AssignmentNumber": {
                    "type": "string"
                  },
                  "ManagerDisplayName": {
                    "type": "string"
                  },
                  "BrillioLocation": {
                    "type": "string"
                  },
                  "BirthDate": {
                    "type": "string"
                  },
                  "LegalEntityFusion": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "2096_Response": {
        "type": "object",
        "properties": {
          "revData": {
            "type": "object",
            "properties": {
              "recordId": {
                "type": "integer"
              },
              "region": {
                "type": "string"
              },
              "practice": {
                "type": "string"
              },
              "id": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "account": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "project": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "id": {
                    "type": "string"
                  }
                }
              },
              "startdate": {
                "type": "string",
                "format": "date"
              },
              "salesactivity": {
                "type": "string"
              },
              "forecastmonthandyear": {
                "type": "string"
              },
              "Amount": {
                "type": "string"
              },
              "oppid": {
                "type": "string"
              },
              "created": {
                "type": "string"
              },
              "marketvertical": {
                "type": "string"
              },
              "marketsubvertical": {
                "type": "string"
              },
              "microvertical": {
                "type": "string"
              },
              "deliverysubvertical": {
                "type": "string"
              }
            }
          }
        }
      },
      "2001_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ReportingManager": {
                  "type": "string"
                },
                "TimeApprover": {
                  "type": "string"
                },
                "ExpenseApprover": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "825_Response_1": {
        "type": "object",
        "properties": {
          "ResourceName": {
            "type": "string"
          },
          "ProjectName": {
            "type": "string"
          },
          "StartDate": {
            "type": "string"
          },
          "EndDate": {
            "type": "string"
          },
          "Site": {
            "type": "string"
          },
          "Percent": {
            "type": "string"
          },
          "Location": {
            "type": "string"
          },
          "Practice": {
            "type": "string"
          },
          "CustomerName": {
            "type": "string"
          },
          "BillingType": {
            "type": "string"
          },
          "Type": {
            "type": "string"
          },
          "ProjectManager": {
            "type": "string"
          },
          "DeliveryManager": {
            "type": "string"
          },
          "Subsidiary": {
            "type": "string"
          },
          "Vertical": {
            "type": "string"
          },
          "ExecutingPractice": {
            "type": "string"
          }
        }
      },
      "825_Response_2": {
        "type": "object",
        "properties": {
          "Id": {
            "type": "string"
          },
          "Project": {
            "type": "string"
          },
          "StartDate": {
            "type": "string",
            "format": "date"
          },
          "EndDate": {
            "type": "string",
            "format": "date"
          },
          "Percent": {
            "type": "string"
          },
          "Active": {
            "type": "string"
          }
        }
      },
      "1226_Response_1": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Project": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "ProjectID": {
                      "type": "string"
                    },
                    "IN": {
                      "type": "string"
                    },
                    "EMPID": {
                      "type": "string"
                    },
                    "ProjectName": {
                      "type": "string"
                    },
                    "Customer": {
                      "type": "string"
                    },
                    "Percent": {
                      "type": "string"
                    },
                    "ProjectStartDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "ProjectEndDate": {
                      "type": "string",
                      "format": "date"
                    },
                    "BillingType": {
                      "type": "string"
                    },
                    "ProjectType": {
                      "type": "string"
                    },
                    "PM": {
                      "type": "string"
                    },
                    "DM": {
                      "type": "string"
                    },
                    "ProjectLocation": {
                      "type": "string"
                    }
                  }
                }
              },
              "Resources": {
                "type": "array",
                "items": {}
              }
            }
          }
        }
      },
      "1226_Response_2": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "string"
          },
          "Data": {
            "type": "object",
            "properties": {
              "ResourceName": {
                "type": "string"
              },
              "ProjectName": {
                "type": "string"
              },
              "StartDate": {
                "type": "string",
                "format": "date"
              },
              "EndDate": {
                "type": "string"
              },
              "Site": {
                "type": "string"
              },
              "Percent": {
                "type": "string"
              },
              "ProjectLocation": {
                "type": "string"
              },
              "Practice": {
                "type": "string"
              },
              "CustomerName": {
                "type": "string"
              },
              "BillingType": {
                "type": "string"
              },
              "Type": {
                "type": "string"
              },
              "ProjectManager": {
                "type": "string"
              },
              "DeliveryManager": {
                "type": "string"
              },
              "Subsidiary": {
                "type": "string"
              },
              "Vertical": {
                "type": "string"
              },
              "ExecutingPractice": {
                "type": "string"
              }
            }
          }
        }
      },
      "1569_Response_1": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ID": {
                    "type": "string"
                  },
                  "Initial": {
                    "type": "string"
                  },
                  "EmployeeID": {
                    "type": "string"
                  },
                  "Name": {
                    "type": "string"
                  },
                  "EmployeeType": {
                    "type": "string"
                  },
                  "PersonType": {
                    "type": "string"
                  },
                  "Designation": {
                    "type": "string"
                  },
                  "Department": {
                    "type": "string"
                  },
                  "Email": {
                    "type": "string"
                  },
                  "Gender": {
                    "type": "string"
                  },
                  "Phone": {
                    "type": "string"
                  },
                  "Location": {
                    "type": "string"
                  },
                  "Level": {
                    "type": "string"
                  },
                  "RMID": {
                    "type": "string"
                  },
                  "RM": {
                    "type": "string"
                  },
                  "RM_Designation": {
                    "type": "string"
                  },
                  "ExpenseApprover": {
                    "type": "string"
                  },
                  "TimeApprover": {
                    "type": "string"
                  },
                  "isRM": {
                    "type": "string"
                  },
                  "Attendance": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "1569_Response_2": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "string"
                },
                "Initial": {
                  "type": "string"
                },
                "EmployeeID": {
                  "type": "string"
                },
                "Name": {
                  "type": "string"
                },
                "EmployeeType": {
                  "type": "string"
                },
                "PersonType": {
                  "type": "string"
                },
                "Designation": {
                  "type": "string"
                },
                "Department": {
                  "type": "string"
                },
                "Email": {
                  "type": "string"
                },
                "Gender": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "1227_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ID": {
                  "type": "string"
                },
                "Initial": {
                  "type": "string"
                },
                "EmployeeID": {
                  "type": "string"
                },
                "Name": {
                  "type": "string"
                },
                "EmployeeType": {
                  "type": "string"
                },
                "PersonType": {
                  "type": "string"
                },
                "Designation": {
                  "type": "string"
                },
                "Department": {
                  "type": "string"
                },
                "Email": {
                  "type": "string"
                },
                "Gender": {
                  "type": "string"
                },
                "Level": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "801_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "FullName": {
                "type": "string"
              },
              "EmployeeId": {
                "type": "string"
              },
              "Designation": {
                "type": "string"
              },
              "ReportingManager": {
                "type": "string"
              },
              "BirthDate": {
                "type": "string"
              },
              "ExpenseApprover": {
                "type": "string"
              },
              "TimeApprover": {
                "type": "string"
              },
              "FusionId": {
                "type": "string"
              },
              "Location": {
                "type": "string"
              },
              "Level": {
                "type": "string"
              }
            }
          }
        }
      },
      "1231_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "SlNo": {
                    "type": "integer"
                  },
                  "Employee": {
                    "type": "string"
                  },
                  "ExpenseID": {
                    "type": "string"
                  },
                  "Date": {
                    "type": "string"
                  },
                  "Purpose": {
                    "type": "string"
                  },
                  "Status": {
                    "type": "string"
                  },
                  "Amount": {
                    "type": "string"
                  },
                  "Project": {
                    "type": "string"
                  },
                  "Subsidiary": {
                    "type": "string"
                  },
                  "Currency": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "1112_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Employee": {
                  "type": "string"
                },
                "ExpenseID": {
                  "type": "string"
                },
                "Date": {
                  "type": "string"
                },
                "Purpose": {
                  "type": "string"
                },
                "Status": {
                  "type": "string"
                },
                "Amount": {
                  "type": "string"
                },
                "Project": {
                  "type": "string"
                },
                "Currency": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "1112_Response_Delete": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "data": {
                "type": "string",
                "example": "expense deleted"
              }
            }
          }
        }
      },
      "1112_Response_Update": {
        "type": "object",
        "properties": {
          "ExpenseID": {
            "type": "string"
          },
          "Body": {
            "type": "object",
            "properties": {
              "Date": {
                "type": "string",
                "format": "date"
              },
              "Expense_Id": {
                "type": "string"
              },
              "Employee": {
                "type": "string"
              },
              "From": {
                "type": "string"
              },
              "To": {
                "type": "string"
              },
              "Purpose": {
                "type": "string"
              },
              "Total": {
                "type": "string"
              },
              "Total_Non_reimbursable": {
                "type": "string"
              },
              "Total_Due": {
                "type": "string"
              }
            }
          },
          "Lines": {
            "type": "object",
            "properties": {
              "RefNo": {
                "type": "string"
              },
              "Category": {
                "type": "string"
              },
              "Currency": {
                "type": "string"
              },
              "Memo": {
                "type": "string"
              },
              "Date": {
                "type": "string"
              },
              "Project": {
                "type": "string"
              },
              "Department": {
                "type": "string"
              },
              "Vertical": {
                "type": "string"
              },
              "Amount": {
                "type": "string"
              }
            }
          }
        }
      },
      "1111_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Details": {
                "type": "string"
              },
              "FirstLevelApprover": {
                "type": "string"
              },
              "Subsidiary": {
                "type": "string"
              },
              "Subsidiary_ID": {
                "type": "string"
              },
              "ExchangeRate": {
                "type": "string"
              }
            }
          }
        }
      },
      "1674_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "InProgressList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "SlNo": {
                      "type": "integer"
                    },
                    "Employee": {
                      "type": "string"
                    },
                    "ExpenseID": {
                      "type": "string"
                    },
                    "Date": {
                      "type": "string",
                      "format": "date"
                    },
                    "Purpose": {
                      "type": "string"
                    },
                    "Status": {
                      "type": "string"
                    },
                    "Amount": {
                      "type": "string"
                    },
                    "Project": {
                      "type": "string"
                    },
                    "Subsidiary": {
                      "type": "string"
                    },
                    "Currency": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "800_Response_1": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ProjectText": {
                  "type": "string"
                },
                "ProjectId": {
                  "type": "string"
                },
                "Vertical": {
                  "type": "string"
                },
                "CategoryText": {
                  "type": "string"
                },
                "Amount": {
                  "type": "string"
                },
                "ForeignAmount": {
                  "type": "string"
                },
                "Currency": {
                  "type": "string"
                },
                "IsReimbursable": {
                  "type": "string"
                },
                "DeliveryManager": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "800_Response_2": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "InternalId": {
                  "type": "string"
                },
                "ExpenseName": {
                  "type": "string"
                },
                "EmployeeName": {
                  "type": "string"
                },
                "TotalAmount": {
                  "type": "string"
                },
                "Currency": {
                  "type": "string"
                },
                "Subsidiary": {
                  "type": "string"
                },
                "TransactionDate": {
                  "type": "string"
                },
                "Memo": {
                  "type": "string"
                },
                "Checked": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "871_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Phone": {
                "type": "integer"
              },
              "Email": {
                "type": "string"
              },
              "Location": {
                "type": "string"
              },
              "WorkAddress": {
                "type": "string"
              }
            }
          }
        }
      },
      "799_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "InternalId": {
                "type": "integer"
              },
              "AccessToken": {
                "type": "string"
              }
            }
          }
        }
      },
      "1465_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Body": {
                "type": "object",
                "properties": {
                  "TimeSheetID": {
                    "type": "string"
                  },
                  "Employee": {
                    "type": "string"
                  },
                  "Email": {
                    "type": "string"
                  },
                  "timesheetApprover": {
                    "type": "string"
                  },
                  "HireDate": {
                    "type": "string"
                  },
                  "TSApprover": {
                    "type": "string"
                  },
                  "WeekStartDate": {
                    "type": "string"
                  },
                  "WeekEndDate": {
                    "type": "string"
                  },
                  "TotalHours": {
                    "type": "string"
                  },
                  "Status": {
                    "type": "string"
                  },
                  "TimeSheetBlock": {
                    "type": "string"
                  },
                  "TaskHoliday": {
                    "type": "string"
                  },
                  "TaskLeave": {
                    "type": "string"
                  },
                  "TaskOT": {
                    "type": "string"
                  },
                  "ServiceItemHoliday": {
                    "type": "string"
                  },
                  "ServiceItemLeave": {
                    "type": "string"
                  },
                  "ServiceItemOT": {
                    "type": "string"
                  },
                  "DayLimit": {
                    "type": "integer"
                  },
                  "WeekLimit": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        }
      },
      "2009_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "InternalId": {
                  "type": "string"
                },
                "ExpenseName": {
                  "type": "string"
                },
                "EmployeeName": {
                  "type": "string"
                },
                "TotalAmount": {
                  "type": "string"
                },
                "Currency": {
                  "type": "string"
                },
                "Subsidiary": {
                  "type": "string"
                },
                "TransactionDate": {
                  "type": "string"
                },
                "Memo": {
                  "type": "string"
                },
                "Checked": {
                  "type": "string"
                },
                "Project": {
                  "type": "string"
                },
                "CurrentDate": {
                  "type": "string"
                },
                "timeStamp": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "1890_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "people_cost": {
                  "type": "string"
                },
                "facility_cost": {
                  "type": "string"
                },
                "ytd_exp": {
                  "type": "string"
                },
                "ytd_rev": {
                  "type": "string"
                },
                "actual_margin": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "891_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Id": {
                  "type": "string"
                },
                "Name": {
                  "type": "string"
                },
                "Title": {
                  "type": "string"
                },
                "HireDate": {
                  "type": "string"
                },
                "FusionId": {
                  "type": "string"
                },
                "ReportingManager": {
                  "type": "string"
                },
                "SubPractice": {
                  "type": "string"
                },
                "Level": {
                  "type": "string"
                },
                "Location": {
                  "type": "string"
                },
                "Type": {
                  "type": "string"
                },
                "SubPracticeHead": {
                  "type": "string"
                },
                "Practice": {
                  "type": "string"
                },
                "PracticeHead": {
                  "type": "string"
                },
                "AllocationList": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "Project": {
                        "type": "string"
                      },
                      "Customer": {
                        "type": "string"
                      },
                      "IsBench": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "2123_Response": {
        "type": "object",
        "properties": {
          "ResourceName": {
            "type": "string"
          },
          "ProjectID": {
            "type": "string"
          },
          "ProjName": {
            "type": "string"
          },
          "StartDate": {
            "type": "string",
            "format": "date"
          },
          "EndDate": {
            "type": "string",
            "format": "date"
          },
          "PercentageOfTime": {
            "type": "string"
          },
          "EmpPractice": {
            "type": "string"
          },
          "Onsite_Offsite": {
            "type": "string"
          },
          "Subsidiary": {
            "type": "string"
          },
          "EmployeeSubPractice": {
            "type": "string"
          },
          "EmployeeParentDepartment": {
            "type": "string"
          },
          "ProjectType": {
            "type": "string"
          }
        }
      },
      "1672_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "Project": {
                  "type": "string"
                },
                "EmployeeID": {
                  "type": "string"
                },
                "Name": {
                  "type": "string"
                },
                "Email": {
                  "type": "string"
                },
                "Department": {
                  "type": "string"
                },
                "WorkLocation": {
                  "type": "string"
                },
                "OnsiteOffsite": {
                  "type": "string"
                },
                "Customer": {
                  "type": "string"
                },
                "Subsidary": {
                  "type": "string"
                },
                "EmployeeType": {
                  "type": "string"
                },
                "AllocationStartDate": {
                  "type": "string",
                  "format": "date"
                },
                "AllocationEndDate": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        }
      },
      "2067_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "internalid": {
                  "type": "string"
                },
                "practiceName": {
                  "type": "string"
                },
                "practiceInternalId": {
                  "type": "string"
                },
                "accountName": {
                  "type": "string"
                },
                "accountInternalId": {
                  "type": "integer"
                },
                "emailId": {
                  "type": "array",
                  "items": {}
                },
                "employeeInternalId": {
                  "type": "array",
                  "items": {}
                },
                "isInactive": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2063_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "pmEmailId": {
                  "type": "array",
                  "items": {}
                },
                "dmEmailId": {
                  "type": "array",
                  "items": {}
                },
                "oppInternalId": {
                  "type": "string"
                },
                "oppId": {
                  "type": "string"
                },
                "oppName": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "1786_Response": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "2015_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ReportingManager": {
                  "type": "string"
                },
                "TimeApprover": {
                  "type": "string"
                },
                "ExpenseApprover": {
                  "type": "string"
                },
                "EmployeeHRBP": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2062_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "recordInternalId": {
                  "type": "string"
                },
                "employeeInternalId": {
                  "type": "string"
                },
                "employeeName": {
                  "type": "string"
                },
                "skillId": {
                  "type": "string"
                },
                "skillName": {
                  "type": "string"
                },
                "proficiencyId": {
                  "type": "string"
                },
                "proficiencyName": {
                  "type": "string"
                },
                "certificate": {
                  "type": "string"
                },
                "isInactive": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2010_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "InProgressList": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "SlNo": {
                      "type": "integer"
                    },
                    "Employee": {
                      "type": "string"
                    },
                    "ExpenseID": {
                      "type": "string"
                    },
                    "Date": {
                      "type": "string",
                      "format": "date"
                    },
                    "Purpose": {
                      "type": "string"
                    },
                    "Status": {
                      "type": "string"
                    },
                    "Amount": {
                      "type": "string"
                    },
                    "Project": {
                      "type": "string"
                    },
                    "Subsidiary": {
                      "type": "string"
                    },
                    "Currency": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "2038_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "employeeInternalId": {
                  "type": "string"
                },
                "employeeName": {
                  "type": "string"
                },
                "experience": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "startDate": {
                        "type": "string"
                      },
                      "endDate": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "1853_Response": {
        "type": "object",
        "properties": {
          "dashboardData": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "project": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object"
                    },
                    "id": {
                      "type": "object"
                    }
                  }
                },
                "account": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "internalid": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "frfnumber": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "rrfnumber": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "frfdatecreated": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "role": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "practice": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "skillfamily": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "primaryskills": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "location": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "startDate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "availabledate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "billrate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "frfSoftLockDate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "frfDeSoftLockDate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                },
                "frfClosedDate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "rrfFilledDate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "taleoStatus": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "frfage": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "softlockresource": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "OppID": {
                  "type": "string"
                },
                "OpportunityStage": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "projectionstatus": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "frfstatus": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "region": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "allocationdate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "externalhire": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "boolean"
                    }
                  }
                },
                "selectedEmployee": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "allocationstatus": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "projectType": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "requestType": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "fitmentType": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "level": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    }
                  }
                },
                "OnHoldDetails": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2210_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "EmployeeDetails": {
                  "type": "object",
                  "properties": {
                    "personNumber": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "middleName": {
                      "type": "string"
                    },
                    "workEmail": {
                      "type": "string"
                    },
                    "department": {
                      "type": "string"
                    },
                    "subDepartment": {
                      "type": "string"
                    },
                    "reportingManager": {
                      "type": "string"
                    },
                    "reportingManagerEmail": {
                      "type": "string"
                    }
                  }
                },
                "Projects": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "projectName": {
                        "type": "string"
                      },
                      "allocationPercentage": {
                        "type": "string"
                      },
                      "allocationStartDate": {
                        "type": "string",
                        "format": "date"
                      },
                      "allocationEndDate": {
                        "type": "string",
                        "format": "date"
                      },
                      "projectManager": {
                        "type": "string"
                      },
                      "projectManagerEmail": {
                        "type": "string"
                      },
                      "deliveryManager": {
                        "type": "string"
                      },
                      "deliveryManagerEmail": {
                        "type": "string"
                      },
                      "customerVertical": {
                        "type": "string"
                      },
                      "customerName": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "2068_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "internalId": {
                  "type": "string"
                },
                "empInternalId": {
                  "type": "string"
                },
                "empName": {
                  "type": "string"
                },
                "emailId": {
                  "type": "string"
                },
                "isInactive": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2070_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "longLeaveInternalId": {
                  "type": "string"
                },
                "employeeInternalId": {
                  "type": "string"
                },
                "employeeName": {
                  "type": "string"
                },
                "startDate": {
                  "type": "string"
                },
                "endDate": {
                  "type": "string"
                },
                "leaveStatus": {
                  "type": "string"
                },
                "leaveType": {
                  "type": "string"
                },
                "projectDetail": {
                  "type": "array",
                  "items": {}
                },
                "isInactive": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2069_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "internalId": {
                  "type": "string"
                },
                "emailId": {
                  "type": "string"
                },
                "practiceName": {
                  "type": "string"
                },
                "practiceInternalId": {
                  "type": "string"
                },
                "isInactive": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "1787_Response": {
        "type": "object",
        "properties": {
          "homeicon": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "resource": {
                  "type": "string"
                },
                "designation": {
                  "type": "string"
                },
                "skills": {
                  "type": "string"
                },
                "criticality": {
                  "type": "string"
                },
                "s_status": {
                  "type": "string"
                },
                "start_date": {
                  "type": "string",
                  "format": "date"
                },
                "end_date": {
                  "type": "string",
                  "format": "date"
                },
                "suggetion": {
                  "type": "string"
                },
                "frf": {
                  "type": "string"
                },
                "star": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "1887_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Revenue": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "period": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "Revenue projected": {
            "type": "string"
          }
        }
      },
      "2204_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Revenue": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "period": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    },
                    "project": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "Revenue projected": {
            "type": "string"
          }
        }
      },
      "2064_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2002_Response": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "string"
          },
          "records": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "internalId": {
                  "type": "string"
                },
                "EmployeeInternalId": {
                  "type": "string"
                },
                "ProjectInternalId": {
                  "type": "string"
                },
                "PmInternalId": {
                  "type": "string"
                },
                "accountInternalId": {
                  "type": "string"
                },
                "employeeLocation": {
                  "type": "string"
                },
                "employeeAllocationStartDate": {
                  "type": "string"
                },
                "employeeAllocationEndDate": {
                  "type": "string"
                },
                "isBillable": {
                  "type": "string"
                },
                "isBench": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2126_Response": {
        "type": "object",
        "properties": {
          "cipherText": {
            "type": "string"
          },
          "cipherOutIV": {
            "type": "string"
          }
        }
      },
      "2258_Response": {
        "type": "object",
        "properties": {
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tranId": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "oppId": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "projectId": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "dateCreated": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "entity": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "amount": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "currency": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "startDate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "endDate": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "2317_Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "Internal_ID": {
              "type": "string"
            },
            "Name": {
              "type": "string"
            }
          }
        }
      },
      "2318_Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "Function": {
              "type": "string"
            },
            "Subsidiary": {
              "type": "string"
            },
            "Email": {
              "type": "string"
            },
            "Solution_ID": {
              "type": "string"
            },
            "Inc_ID": {
              "type": "string"
            },
            "Resource_Name": {
              "type": "string"
            },
            "OTG_APP": {
              "type": "boolean"
            },
            "Fusion_ID": {
              "type": "string"
            },
            "Employee_Practice": {
              "type": "string"
            },
            "Employee_Sub_Practice": {
              "type": "string"
            },
            "Level": {
              "type": "string"
            },
            "Designation": {
              "type": "string"
            },
            "Customer_Vertical": {
              "type": "string"
            },
            "Customer_Name": {
              "type": "string"
            },
            "Customer_Territory": {
              "type": "string"
            },
            "End_Customer": {
              "type": "string"
            },
            "Project_ID": {
              "type": "string"
            },
            "Project_Name": {
              "type": "string"
            },
            "Project_Type": {
              "type": "string"
            },
            "Old_Project_ID": {
              "type": "string"
            },
            "Executing_Practice": {
              "type": "string"
            },
            "Resource_Billable": {
              "type": "boolean"
            },
            "Shadow_Resource": {
              "type": "string"
            },
            "Onsite_Offsite": {
              "type": "string"
            },
            "Allocation_Start_Date": {
              "type": "string"
            },
            "Allocation_End_Date": {
              "type": "string"
            },
            "Hours": {
              "type": "string"
            },
            "Percentage_of_Time": {
              "type": "string"
            },
            "Billing_Start_Date": {
              "type": "string"
            },
            "Billing_End_Date": {
              "type": "string"
            },
            "Billing_Type": {
              "type": "string"
            },
            "Is_T&M_Monthly": {
              "type": "boolean"
            },
            "Work_State": {
              "type": "string"
            },
            "Work_City": {
              "type": "string"
            },
            "Employee_Location": {
              "type": "string"
            },
            "Visa_Type": {
              "type": "string"
            },
            "Project_Manager": {
              "type": "string"
            },
            "Delivery_Manager": {
              "type": "string"
            },
            "Reporting_Manager": {
              "type": "string"
            },
            "Salaried_Hourly": {
              "type": "string"
            },
            "Person_Type": {
              "type": "string"
            },
            "Employee_Type": {
              "type": "string"
            },
            "Employment_Category": {
              "type": "string"
            },
            "Hire_Date": {
              "type": "string"
            },
            "Enterprise_Hire_Date": {
              "type": "string"
            },
            "Expense_Approver": {
              "type": "string"
            },
            "Time_Approver": {
              "type": "string"
            },
            "Bill_Rate": {
              "type": "string"
            },
            "OT_Rate": {
              "type": "string"
            },
            "Monthly_Rate": {
              "type": "string"
            },
            "Notes": {
              "type": "string"
            },
            "Allocation_Status": {
              "type": "string"
            },
            "Last_Modified_By": {
              "type": "string"
            },
            "Last_Modified_Date": {
              "type": "string"
            },
            "Alt_Email": {
              "type": "string"
            },
            "Other_Email_ID": {
              "type": "string"
            },
            "Personal_Email_ID": {
              "type": "string"
            },
            "Employee_Inactive": {
              "type": "boolean"
            },
            "Last_Working_Date": {
              "type": "string"
            },
            "Project_Allocation_Category": {
              "type": "string"
            },
            "Project_Region": {
              "type": "string"
            },
            "Primary_Skills": {
              "type": "string"
            },
            "Secondary_Skills": {
              "type": "string"
            },
            "Employee_Internal_ID": {
              "type": "string"
            },
            "Gender": {
              "type": "string"
            },
            "GST_location": {
              "type": "string"
            },
            "Region": {
              "type": "string"
            },
            "Delivery_Partner": {
              "type": "string"
            },
            "Client_Partner": {
              "type": "string"
            }
          },
          "required": [
            "Function",
            "Subsidiary",
            "Email",
            "Solution_ID",
            "Resource_Name",
            "OTG_APP",
            "Employee_Practice",
            "Employee_Sub_Practice",
            "Level",
            "Designation",
            "Customer_Vertical",
            "Customer_Name",
            "Customer_Territory",
            "Project_ID",
            "Project_Name",
            "Project_Type",
            "Executing_Practice",
            "Resource_Billable",
            "Onsite_Offsite",
            "Allocation_Start_Date",
            "Allocation_End_Date",
            "Hours",
            "Percentage_of_Time",
            "Billing_End_Date",
            "Billing_Type",
            "Is_T&M_Monthly",
            "Employee_Location",
            "Person_Type",
            "Employee_Type",
            "Employment_Category",
            "Hire_Date",
            "Enterprise_Hire_Date",
            "Expense_Approver",
            "Time_Approver",
            "Allocation_Status",
            "Last_Modified_By",
            "Last_Modified_Date",
            "Employee_Inactive",
            "Project_Allocation_Category",
            "Project_Region",
            "Employee_Internal_ID",
            "Gender",
            "Region"
          ]
        }
      },
      "2411_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Travel_Type": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    }
                  }
                }
              },
              "Countries": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    }
                  }
                }
              },
              "Projects": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Project_Id": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    },
                    "Customer_Id": {
                      "type": "string"
                    }
                  }
                }
              },
              "Customers": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    }
                  }
                }
              },
              "Currencies": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    },
                    "Symbol": {
                      "type": "string"
                    }
                  }
                }
              },
              "Travel_Mode": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    }
                  }
                }
              },
              "Visa_Type": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    }
                  }
                }
              },
              "Travel_Request": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    }
                  }
                }
              },
              "Visa_Category": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    }
                  }
                }
              },
              "Hotel_Required": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "Name": {
                      "type": "string"
                    },
                    "Id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "2428_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "ResourceName": {
                  "type": "string"
                },
                "EmployeePractice": {
                  "type": "string"
                },
                "EmployeeSubPractice": {
                  "type": "string"
                },
                "Level": {
                  "type": "string"
                },
                "Subsidiary": {
                  "type": "string"
                },
                "HireDate": {
                  "type": "string"
                },
                "LastWorkingDate": {
                  "type": "string",
                  "format": "date"
                },
                "CustomerName": {
                  "type": "string"
                },
                "ProjectID": {
                  "type": "string"
                },
                "ProjectName": {
                  "type": "string"
                },
                "ProjectExecutingPractice": {
                  "type": "string"
                },
                "ProjectType": {
                  "type": "string"
                },
                "ProjectAllocationCategory": {
                  "type": "string"
                },
                "BillingType": {
                  "type": "string"
                },
                "FPrevRectype": {
                  "type": "string"
                },
                "AllocationStartDate": {
                  "type": "string",
                  "format": "date"
                },
                "AllocationEndDate": {
                  "type": "string",
                  "format": "date"
                },
                "PercentageofTime": {
                  "type": "string"
                },
                "SiteType": {
                  "type": "string"
                },
                "ResourceBillable": {
                  "type": "string"
                },
                "Date": {
                  "type": "string",
                  "format": "date"
                }
              }
            }
          }
        }
      },
      "2481_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "Internal_ID": {
                "type": "string"
              },
              "Practice_Name": {
                "type": "string"
              },
              "ParentPractice_Name": {
                "type": "string"
              },
              "ParentPractice_Internalid": {
                "type": "string"
              },
              "ParentPracticeHead_Name": {
                "type": "string"
              },
              "ParentPracticeHead_Email": {
                "type": "string"
              },
              "ParentPracticeHead_FusionId": {
                "type": "string"
              },
              "Inactive": {
                "type": "string"
              }
            }
          }
        }
      },
      "2523_Response": {
        "type": "object",
        "properties": {
          "cipherText": {
            "type": "string"
          },
          "cipherOutIV": {
            "type": "string"
          }
        }
      },
      "2507_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "SOW_ID": {
                  "type": "string"
                },
                "OPP_ID": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2510_Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "Seq": {
              "type": "string"
            },
            "cipherText": {
              "type": "string"
            },
            "cipherOutIV": {
              "type": "string"
            }
          }
        }
      },
      "2059_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "practiceInternalId": {
                  "type": "string"
                },
                "practiceName": {
                  "type": "string"
                },
                "parentPracticeId": {
                  "type": "string"
                },
                "parentPracticeName": {
                  "type": "string"
                },
                "practiceHeadId": {
                  "type": "string"
                },
                "practiceHeadName": {
                  "type": "string"
                },
                "practiceHeadEmail": {
                  "type": "string"
                },
                "onsiteHeadId": {
                  "type": "string"
                },
                "onsiteHeadName": {
                  "type": "string"
                },
                "onsiteHeadEmail": {
                  "type": "string"
                },
                "inactiveStatus": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "2060_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "timeStamp": {
            "type": "string"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "internalId": {
                  "type": "string"
                },
                "employeeInternalId": {
                  "type": "string"
                },
                "projectInternalId": {
                  "type": "string"
                },
                "pmInternalId": {
                  "type": "string"
                },
                "dmInternalId": {
                  "type": "string"
                },
                "accountInternalId": {
                  "type": "string"
                },
                "employeeLocation": {
                  "type": "string"
                },
                "employeeLocationId": {
                  "type": "string"
                },
                "employeeAllocationStartDate": {
                  "type": "string"
                },
                "employeeAllocationEndDate": {
                  "type": "string"
                },
                "allocationPercentage": {
                  "type": "string"
                },
                "billRate": {
                  "type": "string"
                },
                "billable": {
                  "type": "string"
                },
                "billingTypeId": {
                  "type": "string"
                },
                "billingType": {
                  "type": "string"
                },
                "projectPracticeInternalId": {
                  "type": "string"
                },
                "projectPracticeName": {
                  "type": "string"
                },
                "allocationPractice": {
                  "type": "string"
                },
                "allocationPracticeId": {
                  "type": "string"
                },
                "isInactive": {
                  "type": "string"
                },
                "allocatedDate": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "1635_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "Data": {
            "type": "object",
            "properties": {
              "TimeStamp": {
                "type": "string"
              },
              "Revenue": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "project_id": {
                      "type": "string"
                    },
                    "period": {
                      "type": "string"
                    },
                    "amount": {
                      "type": "string"
                    },
                    "num": {
                      "type": "string"
                    },
                    "sub_practice": {
                      "type": "string"
                    },
                    "practice": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "dt": {
                      "type": "string",
                      "format": "date"
                    }
                  }
                }
              },
              "Discount": {
                "type": "array",
                "items": {}
              }
            }
          }
        }
      },
      "1229_Response": {
        "type": "object",
        "properties": {
          "ExpenseID": {
            "type": "string"
          },
          "Body": {
            "type": "object",
            "properties": {
              "Date": {
                "type": "string",
                "format": "date"
              },
              "Expense_Id": {
                "type": "string"
              },
              "Employee": {
                "type": "string"
              },
              "From": {
                "type": "string",
                "format": "date"
              },
              "To": {
                "type": "string",
                "format": "date"
              },
              "Purpose": {
                "type": "string"
              },
              "Total": {
                "type": "string"
              },
              "Total_Non_reimbursable": {
                "type": "string"
              },
              "Total_Due": {
                "type": "string"
              }
            }
          }
        }
      },
      "1247_Response": {
        "type": "object",
        "properties": {
          "Details": {
            "type": "string"
          },
          "FirstLevelApprover": {
            "type": "string"
          },
          "expenseApprover": {
            "type": "string"
          },
          "Subsidiary": {
            "type": "string"
          },
          "Subsidiary_ID": {
            "type": "string"
          },
          "Currency": {
            "type": "string"
          },
          "ExchangeRate": {
            "type": "string"
          }
        }
      },
      "1783_Response": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            }
          }
        }
      },
      "1987_Response": {
        "type": "object",
        "properties": {
          "addSkillList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean"
                }
              }
            }
          },
          "editSkillList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean"
                }
              }
            }
          },
          "deleteSkillList": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "boolean"
                }
              }
            }
          }
        }
      },
      "2316_Response": {
        "type": "object",
        "properties": {
          "Name": {
            "type": "string"
          },
          "Allocation_Percent": {
            "type": "string"
          },
          "Customer_ID": {
            "type": "string"
          },
          "Cust_Name": {
            "type": "string"
          },
          "Project_ID": {
            "type": "string"
          },
          "Proj_Name": {
            "type": "string"
          },
          "Employee_ID": {
            "type": "string"
          },
          "Emp_Name": {
            "type": "string"
          },
          "Practice": {
            "type": "string"
          },
          "Parent_Practice": {
            "type": "string"
          },
          "Region_Setup": {
            "type": "string"
          },
          "Bill_Rate": {
            "type": "string"
          },
          "Employee_type": {
            "type": "string"
          },
          "Person_type": {
            "type": "string"
          },
          "Onsite_Offsite": {
            "type": "string"
          },
          "Billing_type": {
            "type": "string"
          },
          "Proj_Category": {
            "type": "string"
          },
          "Project_Services": {
            "type": "string"
          },
          "Start_Date": {
            "type": "string"
          },
          "End_Date": {
            "type": "string"
          }
        }
      },
      "2350_Response": {
        "type": "object",
        "properties": {
          "Status": {
            "type": "boolean"
          },
          "externalID": {
            "type": "string"
          },
          "message": {
            "type": "string",
            "example": "Vendor created in Netsuite"
          }
        }
      },
      "2448_Response": {
        "type": "object",
        "properties": {
          "Message": {
            "type": "string",
            "example": "Record has been created successfully"
          },
          "RoleDelegationId": {
            "type": "string"
          }
        }
      },
      "2456_Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Request is already in complete status"
          }
        }
      },
      "2478_Response": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "request cancelled"
          }
        }
      },
      "2529_Response": {
        "type": "object",
        "properties": {
          "cipherText": {
            "type": "string"
          },
          "cipherOutIV": {
            "type": "string"
          }
        }
      },
      "2524_Response": {
        "type": "object",
        "properties": {
          "TimeStamp": {
            "type": "string"
          },
          "Revenue": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "project_id": {
                  "type": "string"
                },
                "period": {
                  "type": "string"
                },
                "amount": {
                  "type": "string"
                },
                "num": {
                  "type": "string"
                },
                "sub_practice": {
                  "type": "string"
                },
                "practice": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "dt": {
                  "type": "string"
                }
              }
            }
          },
          "Discount": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "project_id": {
                  "type": "string"
                },
                "period": {
                  "type": "string"
                },
                "amount": {
                  "type": "string"
                },
                "num": {
                  "type": "string"
                },
                "sub_practice": {
                  "type": "string"
                },
                "practice": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "dt": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "3118_Response": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean"
          },
          "data": {
            "type": "object",
            "properties": {
              "sowID": {
                "type": "string"
              },
              "message": {
                "type": "string",
                "example": "SOW Record Successfully Rejected"
              }
            }
          }
        }
      }
    }
  }
}
